Search.setIndex({"docnames": ["crystalpytools", "crystalpytools.adsorb", "crystalpytools.base.basisset", "crystalpytools.base.crysd12", "crystalpytools.base.crysout", "crystalpytools.base.inputbase", "crystalpytools.base.propout", "crystalpytools.calculate", "crystalpytools.convert", "crystalpytools.crystal_io", "crystalpytools.execute", "crystalpytools.plot", "crystalpytools.thermodynamics", "examples_and_tutorials", "index", "installation", "introduction", "usage"], "filenames": ["crystalpytools.rst", "crystalpytools.adsorb.rst", "crystalpytools.base.basisset.rst", "crystalpytools.base.crysd12.rst", "crystalpytools.base.crysout.rst", "crystalpytools.base.inputbase.rst", "crystalpytools.base.propout.rst", "crystalpytools.calculate.rst", "crystalpytools.convert.rst", "crystalpytools.crystal_io.rst", "crystalpytools.execute.rst", "crystalpytools.plot.rst", "crystalpytools.thermodynamics.rst", "examples_and_tutorials.rst", "index.rst", "installation.rst", "introduction.rst", "usage.rst"], "titles": ["CRYSTALpytools Package", "CRYSTALpytools.adsorb module", "CRYSTALpytools.base.basisset module", "CRYSTALpytools.base.crysd12 module", "CRYSTALpytools.base.crysout module", "CRYSTALpytools.base.inputbase module", "CRYSTALpytools.base.propout module", "CRYSTALpytools.calculate module", "CRYSTALpytools.convert module", "CRYSTALpytools.crystal_io module", "CRYSTALpytools.execute module", "CRYSTALpytools.plot module", "CRYSTALpytools.thermodynamics module", "Examples and Tutorials", "Introduction", "Installation", "Introduction", "Usage"], "terms": {"instruct": 0, "user": [0, 9, 11, 12, 14, 15, 16, 17], "adsorb": [0, 7], "modul": [0, 14, 15, 17], "calcul": [0, 6, 9, 10, 11, 12], "convert": [0, 2, 3, 9, 11], "crystal_io": [0, 4, 11, 13, 14, 17], "execut": [0, 14, 15, 16], "plot": [0, 9, 12], "thermodynam": 0, "base": [0, 9, 11, 12], "crysd12": 0, "crysout": [0, 12], "propout": 0, "inputbas": 0, "basisset": [0, 3, 5], "creat": [1, 5, 7, 9, 10, 11, 17], "fri": [1, 7, 10], "nov": [1, 7, 10], "19": [1, 7, 10], "18": [1, 7, 10], "29": [1, 7], "54": [1, 10], "2021": [1, 7, 10], "sub_ads_indic": 1, "structur": [1, 3, 6, 7, 8, 9, 11, 12, 14, 17], "identifi": [1, 4, 12], "indic": [1, 3, 11], "substrat": [1, 7, 9], "atom": [1, 2, 3, 5, 8, 9, 12], "given": [1, 12], "paramet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "pymatgen": [1, 7, 8, 9, 12, 14, 16], "core": [1, 2, 7, 9], "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17], "input": [1, 3, 5, 7, 9, 11, 12, 14, 16, 17], "return": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15], "dict": [1, 9, 12], "A": [1, 2, 3, 4, 5, 6, 9, 11, 12], "dictionari": [1, 5, 9], "contain": [1, 3, 4, 9, 11, 13, 14, 15, 16], "ha": [1, 5, 12], "two": [1, 11], "kei": [1, 3, 5, 12], "list": [1, 2, 3, 5, 6, 8, 9, 11, 12, 14, 15], "correspond": [1, 2, 3, 4, 5, 9, 12], "crystal": [2, 3, 4, 5, 8, 9, 11, 12, 14, 15, 16, 17], "basi": [2, 3, 11], "set": [2, 3, 5, 9, 10, 11, 12], "includ": [2, 3, 5, 8, 9, 12], "object": [2, 3, 4, 5, 6, 8, 9, 11, 12], "respect": [2, 11], "file": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17], "shell": [2, 6], "gaussian": 2, "type": [2, 9, 11, 14, 15], "function": [2, 8, 9, 11, 12, 13, 14, 15, 16], "gtf": 2, "exchang": [2, 3], "bse": [2, 3], "python": [2, 5, 14, 15, 16, 17], "api": [2, 3], "i": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "us": [2, 3, 5, 9, 11, 12, 14, 15, 16], "get": [2, 4, 5, 9, 11, 12], "To": [2, 3, 5, 12, 14, 15], "call": [2, 3, 5, 8, 11, 12, 14, 15, 17], "modifi": [2, 5, 9], "certain": [2, 12], "which": [2, 3, 9, 12], "usual": [2, 3, 5, 12], "need": [2, 3, 5, 7, 8, 12, 14, 15], "when": [2, 3, 4, 5, 9, 12, 14, 15, 16], "optim": [2, 3, 9, 12], "b": [2, 12], "basissetbas": [2, 3], "from_bs": [2, 3], "6": [2, 3], "311g": [2, 3], "c": [2, 3, 12], "h": [2, 3, 12], "download": [2, 3], "from": [2, 3, 8, 9, 11, 12, 14, 15, 16], "1": [2, 3, 4, 5, 6, 9, 11, 12, 14, 16], "2": [2, 3, 5, 6, 7, 9, 11, 12], "exp": [2, 12], "46000": 2, "chang": [2, 3, 12], "expon": 2, "3rd": [2, 3, 12], "2nd": [2, 6, 8, 9, 11, 12], "convent": [2, 3, 8, 9], "number": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15], "contr": 2, "0": [2, 3, 5, 6, 7, 8, 9, 11, 12], "001": 2, "contract": 2, "pceof": 2, "815854": 2, "sp": 2, "coeffici": [2, 9, 11, 12], "class": [2, 3, 4, 6, 9, 12], "bs_atom": 2, "z": [2, 8, 9, 11], "info": [2, 9], "should": [2, 3, 5, 9, 11, 12, 14, 15], "consist": [2, 9, 11, 12], "all": [2, 3, 5, 9, 11, 12, 14, 15], "otherwis": [2, 5, 9, 11, 12], "unexpect": 2, "error": [2, 9, 10, 11], "might": [2, 9, 12, 14, 15], "happen": 2, "free": [2, 12], "effect": 2, "pseudopotenti": [2, 9], "ecp": 2, "definit": [2, 3, 9], "support": [2, 5, 12], "int": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12], "conventi": 2, "str": [2, 3, 5, 6, 8, 9, 10, 11, 12], "string": [2, 3, 5, 6, 11, 12, 14, 15], "format": [2, 3, 4, 5, 8, 9, 11], "_print_data": 2, "bs_str": 2, "an": [2, 3, 5, 8, 9, 10, 11, 12], "_set_stdb": 2, "standard": 2, "sto": 2, "3g": 2, "3": [2, 3, 4, 5, 9, 11, 12, 14, 15], "21g": 2, "gener": [2, 3, 8, 9, 11, 12, 14, 17], "conventional_atomic_numb": 2, "zconv": [2, 8, 9], "real": [2, 5], "n": [2, 3, 11], "100": [2, 12], "integ": [2, 11], "properti": [2, 3, 5, 6, 9, 10, 11, 12], "data": [2, 3, 4, 5, 6, 8, 9, 11, 12, 14, 15, 17], "print": [2, 3, 4, 5, 9, 12], "inform": [2, 4, 9, 11, 12], "bs_gtf": 2, "radial": [2, 3], "bs_shell": 2, "ityb": 2, "lat": 2, "ng": 2, "che": 2, "scal": 2, "other": [2, 3, 5, 6, 9, 11, 12], "argument": [2, 5, 9, 12], "ar": [2, 3, 5, 6, 9, 11, 12, 13, 14, 15], "manual": [2, 3, 8, 9, 12], "one": [2, 3, 5, 9, 11, 12, 13, 14], "can": [2, 3, 5, 9, 11, 12, 13, 14, 15, 16], "pass": [2, 14, 15], "follow": [2, 5, 12, 14, 15], "name": [2, 3, 5, 8, 9, 10, 11, 12, 14, 15], "none": [2, 3, 5, 8, 9, 10, 11, 12], "specifi": [2, 3, 5, 9, 11, 12, 14, 15], "element": [2, 3, 5, 8, 9], "either": [2, 3, 5, 9, 12], "label": [2, 3, 6, 8, 11], "For": [2, 3, 5, 9, 11, 12, 14, 15], "refer": [2, 3, 8, 9, 11, 12], "role": 2, "omit": 2, "_set_atom": 2, "assign": 2, "level": [2, 11, 12], "If": [2, 3, 6, 8, 9, 11, 12, 14, 15], "Its": 2, "length": [2, 5, 12], "must": [2, 3], "nelement": [2, 3], "sequenc": [2, 5], "": [2, 3, 8, 9, 11, 12], "classmethod": [2, 4, 6, 12], "from_fil": [2, 3, 9, 12], "fmt": [2, 3, 11], "defin": [2, 3, 5, 9, 11, 12], "from_str": [2, 3], "to_fil": [2, 3], "dat": [2, 6, 9], "text": [2, 3, 5, 12, 14, 15], "output": [2, 4, 6, 8, 9, 11, 12, 14, 16, 17], "crystal_inputbas": [3, 5, 9], "strictli": 3, "block": [3, 5, 9], "keyword": [3, 9, 12], "close": [3, 5, 6, 12], "end": [3, 4, 5], "It": [3, 12, 14, 15], "inherit": [3, 9], "blockbas": [3, 5], "crystal_input": [3, 9], "organ": 3, "layer": [3, 5, 14, 16], "each": [3, 9, 11, 12, 13, 14], "current": [3, 5, 11, 12], "below": [3, 5, 12, 14, 15, 17], "geom": [3, 5, 9], "scf": [3, 5, 9], "optgeom": [3, 5, 9], "freqcalc": 3, "dft": [3, 12], "dftd3": 3, "gcp": 3, "fixindex": [3, 5, 12], "preoptgeom": 3, "usag": [3, 12], "pleas": [3, 9, 12, 14, 15], "document": [3, 13, 14], "exampl": [3, 5, 11, 15], "forc": [3, 9, 12], "converg": [3, 9], "threshold": [3, 4, 9, 12], "run": [3, 10, 14, 15], "obj": 3, "toldeg": 3, "0001": [3, 9, 12], "In": [3, 5, 9, 14, 15, 16], "principl": 3, "like": [3, 5, 12, 14, 15], "attribut": [3, 5, 11, 12], "automat": [3, 5, 12], "empti": [3, 5], "except": [3, 12], "set_attr": [3, 5], "method": [3, 4, 6, 9, 12], "warn": [3, 4, 9, 12], "messag": [3, 4, 9, 10, 12], "open": [3, 6, 9], "sub": [3, 5, 12], "sinc": 3, "doe": [3, 5, 11], "avoid": 3, "potenti": [3, 11, 12, 14, 16], "conflict": 3, "set_preoptgeom": 3, "0003": 3, "have": [3, 9, 11], "same": [3, 5, 11, 12], "One": [3, 11], "setup": 3, "clean": [3, 5, 12], "tolde": [3, 5], "9": [3, 11, 14, 15], "valu": [3, 5, 9, 11, 12, 14, 15], "ppan": [3, 9], "without": [3, 5, 8, 12], "though": 3, "up": [3, 7, 9, 11, 12], "also": [3, 12], "possibl": [3, 11], "read": [3, 4, 5, 6, 8, 9, 12, 14, 15], "templat": 3, "d12": [3, 5], "do": [3, 6, 8, 9, 11, 12, 14, 15], "modif": 3, "opt": [3, 9], "remov": [3, 4, 9, 12], "individu": [3, 5, 12], "set_block": 3, "itself": 3, "set_dft": 3, "spin": [3, 6, 9, 11], "nexchang": 3, "npbe": 3, "ncorrelat": 3, "np86": 3, "typic": [3, 12], "wai": [3, 5], "explicit": [3, 12], "via": [3, 14, 16], "line": [3, 4, 5, 6, 9, 11, 14, 15], "99": 3, "requir": [3, 5, 9, 11, 12], "def2": 3, "svp": 3, "mybasi": 3, "txt": 3, "o": 3, "examin": [3, 12], "_check_b": 3, "append": 3, "check": [3, 5, 14, 15], "Not": [3, 12], "independ": 3, "design": [3, 5], "filenam": [3, 12], "fals": [3, 8, 9, 11, 12], "second": [3, 9, 12], "entri": [3, 6, 12, 14, 15], "recogn": 3, "bool": [3, 4, 8, 9, 11, 12], "whether": [3, 9, 11, 12], "cover": [3, 5, 12], "old": [3, 5], "anywai": 3, "thi": [3, 5, 9, 11, 12, 14, 15, 16], "see": [3, 9, 12, 14, 16], "from_obj": 3, "bs_obj": 3, "break": 3, "ghost": 3, "na": 3, "la": 3, "crystalinputbas": 3, "complet": 3, "geometri": [3, 8, 9, 12], "suggest": 3, "set_basisset": 3, "subblock": 3, "submodul": 3, "Or": [3, 11], "set_geom": 3, "set_scf": 3, "write": [3, 5, 9, 12], "angular": [3, 12], "ni": 3, "al": 3, "lev": 3, "correlat": 3, "cor": 3, "ex": 3, "lgrid": 3, "oldgrid": 3, "nr": 3, "rl": 3, "il": 3, "xcfunc": 3, "xc": 3, "xlgrid": 3, "xxlgrid": 3, "xxxlgrid": 3, "a1": 3, "a2": 3, "abc": 3, "abcradiu": 3, "cnradiu": 3, "func": 3, "char": 3, "printc6": 3, "radiu": 3, "rs6": 3, "rs8": 3, "s6": 3, "s8": 3, "version": [3, 14, 15, 16], "nat": 3, "band": [3, 6, 8, 9, 11, 12], "iss": 3, "nsub": 3, "nline": [3, 5], "point": [3, 4, 6, 8, 9, 11, 12], "dispers": [3, 4, 9, 12], "mode": [3, 4, 9, 11, 12], "nomod": 3, "nooptgeom": 3, "numderiv": 3, "pressur": [3, 12], "np": [3, 9], "p1": 3, "p2": 3, "restart": 3, "stepsiz": 3, "step": [3, 9, 14, 15], "temperat": 3, "nt": 3, "t1": 3, "t2": 3, "alpha": [3, 11, 12], "beta": [3, 11], "eta": 3, "printemiss": 3, "sigma": [3, 11], "atomord": 3, "cifprt": 3, "cifprtsym": 3, "igr": 3, "latt": [3, 12], "iflag": 3, "ifhr": 3, "ifso": 3, "origin": [3, 9, 11], "sg": 3, "space": [3, 7, 9, 11], "group": [3, 12], "minim": [3, 12], "crystallograph": 3, "cell": [3, 7, 9, 12], "natom": [3, 4, 9, 12], "4": [3, 5, 12, 14, 15], "3d": [3, 8], "fraction": [3, 9, 12], "coordin": [3, 5, 6, 9, 12], "summar": [3, 5], "here": [3, 4, 5, 12, 14, 15], "address": 3, "ambigu": 3, "molecul": [3, 8], "dlvinput": 3, "extern": [3, 9], "extprt": 3, "helix": 3, "n1": 3, "n2": 3, "moleiso": 3, "nmol": 3, "option": [3, 9, 10, 11, 12], "isol": 3, "lattic": [3, 9, 12], "onli": [3, 5, 8, 9, 11, 12, 14, 15], "0d": [3, 8], "polym": 3, "scelconf": 3, "mx": [3, 5], "supercel": [3, 5], "scelphono": [3, 5, 12], "set_freqcalc": 3, "set_optgeom": 3, "slab": 3, "arrai": [3, 4, 6, 9, 11, 12], "ndimen": [3, 5], "matrix": [3, 5, 9, 11, 12], "supercon": 3, "testgeom": 3, "titl": [3, 5, 9, 11], "allowtrustr": 3, "cellonli": 3, "cvolopt": [3, 5], "extpress": 3, "pre": 3, "finalrun": 3, "icod": 3, "fragment": 3, "nl": 3, "lb": 3, "fulloptg": 3, "hessiden": 3, "hessmod1": 3, "hessmod2": 3, "hessnum": 3, "intredun": 3, "itatocel": 3, "maxcycl": 3, "max": [3, 11], "maxtradiu": 3, "trmax": 3, "nosymmop": 3, "notrustr": 3, "noxyz": 3, "onelog": 3, "printforc": 3, "printhess": 3, "printopt": 3, "ig": 3, "tg": 3, "toldex": 3, "tx": 3, "trustradiu": 3, "tradiu": 3, "atomspin": [3, 5], "bipos": 3, "isiz": 3, "dii": 3, "diisallk": 3, "exchsiz": 3, "fixbas": 3, "fixgeom": 3, "key1": 3, "obj1": 3, "obj2": 3, "key2": 3, "geba": [3, 5], "fmix": 3, "ipmix": 3, "gcpauto": 3, "guessp": [3, 10], "histdii": 3, "ncyc": 3, "ldremo": 3, "nodii": 3, "prtdii": 3, "set_dftd3": 3, "set_gcp": 3, "shrink": [3, 5, 9], "isp": 3, "is1": 3, "is2": 3, "is3": 3, "smear": [3, 9], "width": [3, 11], "itol": 3, "tolinteg": 3, "itol1": 3, "itol2": 3, "itol3": 3, "itol4": 3, "itol5": 3, "phrase": [4, 6], "phononbas": 4, "basic": [4, 5, 9], "clean_imaginari": 4, "substitut": 4, "imaginari": [4, 12], "eigenvector": [4, 9, 12], "numpi": [4, 9, 11, 12], "nan": [4, 9], "crystal_output": [4, 9, 11, 12], "float": [4, 6, 7, 8, 9, 11, 12], "phonon": [4, 6, 9, 11, 12], "neg": [4, 9, 11, 12], "clean_q_overlap": 4, "repeat": [4, 5, 9], "q": [4, 9, 12], "both": [4, 5, 12], "segment": 4, "weight": [4, 9, 12], "updat": [4, 5, 9, 12], "overlap": [4, 9, 11, 12], "readmode_bas": 4, "countlin": 4, "frequenc": [4, 6, 9, 11, 12], "nmode": [4, 9, 12], "inten": [4, 9], "ir": [4, 9], "raman": [4, 9], "readmode_eigenvector": 4, "eigvt": [4, 12], "normal": [4, 9, 12], "wrapper": [5, 11], "provid": [5, 9, 11, 14, 17], "oper": [5, 9], "d3": 5, "_attr": 5, "attr": 5, "_block_attr": 5, "anoth": [5, 9], "decor": 5, "exist": [5, 9, 11], "new": [5, 8, 9, 12, 14, 15], "_block_bg": 5, "undefin": 5, "1st": [5, 8, 9], "optgeomn": 5, "similarli": 5, "_block_": 5, "default": [5, 7, 9, 10, 11, 12], "endbsn": 5, "note": [5, 9, 11, 12, 14, 15], "whole": [5, 9, 12], "regard": 5, "its": [5, 9], "_block_data": 5, "store": [5, 11, 12], "_block_dict": 5, "whose": [5, 9, 12], "pair": [5, 11], "alwai": [5, 12], "place": 5, "after": 5, "_block_kei": 5, "_block_valu": 5, "sort": [5, 12], "non": 5, "properties_inputbas": 5, "upper": 5, "set_matrix": 5, "assign_keyword": 5, "multipl": [5, 9, 11, 12], "set_list": 5, "irregular": 5, "special": 5, "scheme": [5, 11, 12], "between": [5, 7, 8, 9, 11, 12, 14, 16], "simpli": 5, "direct": [5, 8, 11], "differ": [5, 7, 9, 11, 12, 14, 17], "_sp_matrix": 5, "By": [5, 12], "involv": 5, "clean_conflict": 5, "explan": 5, "redo": 5, "make": [5, 11, 14, 15], "implement": [5, 12], "cphf": 5, "qha": [5, 9, 12], "eo": [5, 12], "analyze_text": 5, "analyz": [5, 9], "static": [5, 12], "shape": 5, "transform": [5, 8], "1d": [5, 6], "begin": [5, 14, 15], "everyth": 5, "clean_block": 5, "access": [5, 14, 16], "directli": [5, 12], "delet": 5, "altern": [5, 14, 15], "kept": [5, 12], "eras": 5, "newattr": 5, "thei": [5, 14, 16], "explicitli": [5, 12], "_": [5, 12], "arg": [5, 11], "known": 5, "dimens": [5, 6, 9, 11, 12], "Such": 5, "flatten": 5, "expans": [5, 12], "strain": 5, "tensor": [5, 9, 11], "update_block": 5, "inspect": 5, "bandsbas": [6, 9, 11], "n_tick": 6, "tick_posit": 6, "tick_label": 6, "efermi": 6, "n_band": 6, "n_kpoint": [6, 9], "k_point_plot": 6, "unit": [6, 7, 9, 11, 12], "electron": [6, 11, 12], "high": [6, 11, 12], "symmetr": [6, 9, 11], "k": [6, 8, 9, 11, 12], "along": [6, 8, 9, 11, 12], "path": [6, 8, 9, 10, 11], "fermi": [6, 9, 11], "energi": [6, 7, 9, 11, 12], "ev": [6, 9, 11], "thz": [6, 9, 11, 12], "band_pars": 6, "pars": [6, 9, 14, 17], "phonband": 6, "divid": 6, "f25_parser": 6, "fort": [6, 9], "25": [6, 9], "dosbas": [6, 9, 11], "n_energi": 6, "n_proj": 6, "doss": [6, 9, 11], "doensiti": 6, "state": [6, 11, 12], "project": [6, 9, 11], "restrict": 6, "first": [6, 9, 12, 14, 16], "axi": [6, 9, 11], "doss_pars": 6, "phondo": 6, "35": 7, "author": 7, "brunocamino": 7, "cry_ads_energi": 7, "e_full_system": 7, "e_substr": 7, "e_adsorb": 7, "adsorpt": 7, "system": [7, 9, 12, 14, 15], "total": [7, 12], "full": [7, 14, 16], "sum": [7, 12], "cry_shrink": 7, "determin": [7, 9], "achiev": [7, 14, 16], "desir": 7, "round": 7, "convers": 8, "cry_ase2gui": 8, "pbc": [8, 9], "true": [8, 9, 11, 12, 14, 15], "symmetri": [8, 9, 11], "ASE": [8, 9], "gui": [8, 9], "perform": 8, "analysi": [8, 9, 12], "crystal_gui": [8, 9], "cry_bands2pmg": 8, "displai": [8, 14, 15], "bandstructuresymmlin": 8, "cry_gui2as": 8, "gui_fil": [8, 9], "cry_gui2cif": 8, "cif_file_nam": 8, "symprec": [8, 9], "01": [8, 9], "angle_toler": [8, 9], "5": [8, 9, 11, 12], "save": [8, 11], "cif": [8, 9], "cifwrit": 8, "cry_gui2pmg": 8, "vacuum": 8, "10": [8, 14, 16], "distanc": [8, 11], "cry_gui2xyz": 8, "xyz_file_nam": 8, "xyz": 8, "cry_out2as": 8, "initi": [8, 9, 12], "last": [8, 9], "cry_out2cif": 8, "io": [8, 12], "import": [8, 14, 15], "cry_out2pmg": 8, "cry_out2xyz": 8, "cry_pmg2gui": 8, "becaus": 8, "period": [8, 9], "boundari": [8, 9, 12], "condit": [8, 9], "x": [8, 9, 11, 12], "y": [8, 9, 11, 12], "index": [8, 9, 11], "edit": 9, "substract": 9, "crystal_dens": 9, "densiti": [9, 11], "f98": 9, "read_cry_irr_dens": 9, "fort98_unit": 9, "profil": [9, 11], "param": [9, 12], "work": 9, "progress": 9, "you": [9, 14, 15], "interest": [9, 14, 15], "issu": 9, "github": 9, "read_gui": 9, "mainli": 9, "write_gui": 9, "symm": [9, 12], "pseudo_atom": 9, "go": 9, "written": [9, 14, 15], "describ": [9, 14, 15], "_pmg2input": 9, "struc": 9, "istructur": 9, "mai": 9, "case": [9, 11, 14, 15], "equival": [9, 12], "choic": 9, "lead": 9, "due": [9, 11, 12], "inconsist": 9, "geom_from_cif": 9, "gui_nam": 9, "34": 9, "put": 9, "infom": 9, "singl": [9, 11, 12], "extens": 9, "irreduc": 9, "limit": [9, 11], "find": 9, "spacegroupanalyz": 9, "geom_from_pmg": 9, "get_band_gap": 9, "gap": 9, "ndarrai": [9, 11], "get_config_analysi": 9, "return_multipl": 9, "configur": 9, "solid": [9, 11], "solut": 9, "confcon": 9, "avail": [9, 12, 14, 16], "get_dielectric_tensor": 9, "extract": 9, "dielectr": 9, "get_dimension": 9, "dimension": [9, 11], "get_eigenvector": 9, "get_elatensor": 9, "elast": [9, 11], "6x6": 9, "nest": 9, "get_fermi_energi": 9, "get_final_energi": 9, "final": 9, "get_forc": 9, "grad": 9, "gradient": 9, "get_last_geom": 9, "write_gui_fil": 9, "symm_info": 9, "optimis": 9, "taken": [9, 14, 15], "get_mod": 9, "deprec": 9, "get_mulliken_charg": 9, "mulliken": 9, "charg": [9, 11], "get_num_cycl": 9, "cycl": 9, "get_opt_convergence_energi": 9, "get_phonon": 9, "read_eigvt": [9, 12], "rm_imaginari": 9, "rm_overlap": 9, "imaginary_tol": [9, 12], "q_overlap_tol": [9, 12], "relat": [9, 12], "recalcul": 9, "norm": [9, 12], "vector": [9, 11, 12], "harmon": [9, 12], "comput": [9, 11, 12, 14, 15], "reciproc": 9, "self": [9, 12], "edft": [9, 12], "e_": [9, 12], "empir": 9, "correct": 9, "kj": [9, 12], "mol": [9, 12], "nqpoint": [9, 12], "qpoint": [9, 12], "ofvibr": 9, "intensii": 9, "km": 9, "boolean": 9, "activ": [9, 14, 15], "get_phonon_eigenvector": 9, "get_primitive_lattic": 9, "primit": [9, 12], "get_q_info": 9, "get_reciprocal_lattic": 9, "get_scf_converg": 9, "all_cycl": 9, "tupl": [9, 11, 12], "get_symm_op": 9, "read_cry_output": 9, "output_nam": [9, 12], "crystaloutput": 9, "repres": [9, 11], "properties_input": 9, "input_nam": 9, "make_bands_block": 9, "k_path": 9, "first_band": 9, "last_band": 9, "print_eig": 9, "print_opt": 9, "highsymmkpath": 9, "eigenvalu": 9, "make_doss_block": 9, "n_point": 9, "200": [9, 11, 12], "band_rang": 9, "e_rang": 9, "plotting_opt": 9, "poli": 9, "12": 9, "rang": [9, 11, 12], "degre": [9, 11], "polynomi": [9, 12], "make_newk_block": 9, "shrink1": 9, "shrink2": 9, "newk": 9, "factor": [9, 11, 12], "make_pdoss_block": 9, "proj_typ": 9, "output_fil": 9, "pdoss": 9, "site": 9, "write_properties_input": 9, "properties_output": [9, 11], "read_cry_band": 9, "read_cry_contour": 9, "contour": [9, 11], "read_cry_density_profil": 9, "read_cry_doss": 9, "read_cry_lapl_profil": 9, "laplacian": [9, 11], "read_cry_rholin": 9, "read_cry_seebeck": 9, "seebeck": [9, 11], "read_cry_sigma": 9, "electr": [9, 11], "conduct": [9, 11], "read_cry_xrd_spec": 9, "xrd": [9, 11], "spectrum": 9, "read_electron_band": 9, "read_electron_do": 9, "read_fil": 9, "read_vecfield": 9, "which_prop": 9, "f25": 9, "more": 9, "select": [9, 11], "cry_combine_dens": 9, "density1": 9, "density2": 9, "density3": 9, "new_dens": 9, "spin_pol": 9, "combin": [9, 11, 12], "polar": [9, 11], "write_cry_dens": 9, "fort98_nam": 9, "new_p": 9, "new_fort98": 9, "previou": [9, 12], "28": 10, "runcri": 10, "file_nam": 10, "result": 10, "runprop": 10, "prop_nam": 10, "wf_file": 10, "wavefunct": 10, "set_runcry_path": [10, 14, 15], "set_runprop_path": [10, 14, 15], "visual": 11, "plot_cry_band": 11, "k_label": 11, "energy_rang": 11, "not_scal": 11, "linestl": 11, "linewidth": 11, "color": 11, "k_rang": 11, "figsiz": 11, "sharex": 11, "sharei": 11, "union": 11, "min": [11, 12], "flag": 11, "scale": [11, 12], "comparison": 11, "multi": 11, "compar": 11, "surfac": 11, "style": 11, "figur": [11, 12], "size": 11, "subplot": 11, "row": 11, "column": 11, "col": 11, "share": 11, "rais": [11, 12], "valueerror": [11, 12], "invalid": 11, "plot_cry_comp": 11, "theta": 11, "phi": 11, "linear": [11, 12], "compress": 11, "e": [11, 12, 13, 14, 15], "angl": 11, "complianc": 11, "intend": [11, 14, 15], "cry_ela_plot": 11, "plot_cry_contour": 11, "contour_obj": 11, "save_to_fil": 11, "retriev": 11, "2d": 11, "x_graph_param": 11, "y_graph_param": 11, "meshgrid": 11, "x_point": 11, "y_point": 11, "linestyl": 11, "figure_tipo_yyyi": 11, "mm": 11, "dd_hhmmss": 11, "jpg": 11, "directori": 11, "plot_cry_contour_differ": 11, "contour_obj_ref": 11, "tipo": 11, "surflapp": 11, "surflapm": 11, "surfrhoo": 11, "surfelfb": 11, "datafram": 11, "figure_diff_tipo_yyyi": 11, "plot_cry_density_profil": 11, "lapl_obj": 11, "angstrom": [11, 12], "per": [11, 12, 13, 14], "cubic": 11, "plot_cry_doss": 11, "dos_rang": 11, "prj": 11, "height": 11, "inch": 11, "down": 11, "xmin": 11, "xmax": 11, "ymin": 11, "ymax": 11, "plot_cry_ela": 11, "choos": [11, 12], "ndeg": 11, "dpi": 11, "filetyp": 11, "png": [11, 12], "transpar": 11, "variabl": 11, "order": [11, 12, 14, 15], "shot": 11, "establish": 11, "fix": 11, "among": 11, "them": 11, "young": 11, "comp": 11, "shear": 11, "avg": 11, "poisson": 11, "discret": 11, "dot": 11, "background": 11, "plot_cry_": 11, "color_bd": 11, "color_doss": 11, "linestl_bd": 11, "linestl_doss": 11, "dos_max_rang": 11, "dos_beta": 11, "specif": [11, 12], "maximum": [11, 12], "fig": 11, "plot_cry_lapl_profil": 11, "fifth": 11, "power": [11, 12], "area": 11, "under": 11, "curv": [11, 12], "where": [11, 12, 14, 15], "fill": 11, "light": 11, "blue": 11, "posit": 11, "coral": 11, "plot_cry_multiseebeck": 11, "chemic": 11, "prompt": 11, "temperatur": [11, 12], "lower": 11, "higher": 11, "s_xx": 11, "s_xy": 11, "s_xz": 11, "s_yx": 11, "s_yi": 11, "s_yz": 11, "s_zx": 11, "s_zy": 11, "s_zz": 11, "differenti": 11, "transport": 11, "p": [11, 12], "dash": 11, "multiseebeckyyyi": 11, "yyyi": 11, "date": 11, "time": 11, "plot_cry_multisigma": 11, "multisigmayyyi": 11, "plot_cry_poisson": 11, "theta_1d": 11, "phi_1d": 11, "poisson_choic": 11, "ratio": 11, "third": 11, "chi": 11, "averag": [11, 12], "minimum": 11, "plot_cry_powerfactor_carri": 11, "seebeck_obj": 11, "sigma_obj": 11, "carrier": 11, "concentr": 11, "pf_xx": 11, "pf_xy": 11, "pf_xz": 11, "pf_yx": 11, "pf_yi": 11, "pf_yz": 11, "pf_zx": 11, "pf_zy": 11, "pf_zz": 11, "distinguish": 11, "powerfactor_carrier_at_t_k___yyyi": 11, "powerfactor_carrier_different_t_yyyi": 11, "plot_cry_powerfactor_potenti": 11, "powerfactor_potential_at_t_k___yyyi": 11, "powerfactor_potential_different_t_yyyi": 11, "plot_cry_rholin": 11, "rholine_obj": 11, "resist": 11, "rholin": 11, "d": 11, "aa": 11, "r": [11, 12], "ho": 11, "rac": 11, "figure_rholine_yyyi": 11, "plot_cry_seebeck_carri": 11, "seebeck_carrier_at_t_k___yyyi": 11, "seebeck_carrier_different_t_yyyi": 11, "plot_cry_seebeck_potenti": 11, "seebeck_potential_at_t_k___yyyi": 11, "seebeck_potential_different_t_yyyi": 11, "plot_cry_shear": 11, "shear_choic": 11, "modulu": [11, 12], "plot_cry_sigma_carri": 11, "sigma_carrier_at_t_k___yyyi": 11, "sigma_carrier_different_t_yyyi": 11, "plot_cry_sigma_potenti": 11, "sigma_potential_at_t_k___yyyi": 11, "sigma_potential_different_t_yyyi": 11, "plot_cry_xrd": 11, "xrd_obj": 11, "rai": 11, "diffract": 11, "pattern": 11, "16": 11, "30": 11, "figure_xrd_yyyi": 11, "plot_cry_young": 11, "plot_cry_zt": 11, "zt": 11, "ktot": 11, "w": 11, "1k": 11, "1m": 11, "zt_xx": 11, "zt_xy": 11, "zt_xz": 11, "zt_yx": 11, "zt_yi": 11, "zt_yz": 11, "zt_zx": 11, "zt_zy": 11, "zt_zz": 11, "zt_at_t_k___yyyi": 11, "zt_different_t_yyyi": 11, "plot_electron_band": 11, "forestgreen": 11, "read_band": 11, "hartre": 11, "greek": 11, "alphabet": 11, "gamma": [11, 12], "volum": [11, 12, 14, 15], "2x1": 11, "legend": 11, "layout": 11, "unknown": 11, "plot_electron_banddo": 11, "dos_prj": 11, "color_band": 11, "color_do": 11, "linestl_band": 11, "linestl_do": 11, "read_doss": 11, "valid": [11, 12], "side": 11, "plot_electron_do": 11, "obect": 11, "code": [11, 14, 16, 17], "plot_phonon_band": 11, "cm": 11, "line_freq0": 11, "read_pband": 11, "plot_phonon_banddo": 11, "freq_rang": 11, "freq0_lin": 11, "permit": [11, 12], "plot_phonon_do": 11, "read_pdo": 11, "plot_vecfield2d_j": 11, "header": 11, "dens_jx": 11, "dens_ji": 11, "dens_jz": 11, "colormapden": 11, "quivscal": 11, "400": 11, "field": 11, "compon": 11, "about": 11, "colormap": 11, "quiver": 11, "den": 11, "imag": 11, "plot_vecfield2d_m": 11, "save_plot": 11, "path_to_fil": 11, "filenotfounderror": 11, "folder": [11, 13, 14, 15], "post": 12, "process": 12, "dynam": 12, "quasiharmon": 12, "approxim": 12, "autocalc": 12, "calclul": 12, "parameter": 12, "phonopi": 12, "ouput": 12, "thermodyanm": 12, "gpa": 12, "out": 12, "launch": 12, "verbos": 12, "print_result": 12, "300": 12, "harmonic_phonon": 12, "_phonon_sumup": 12, "calculate_zp": 12, "inidiv": 12, "translat": 12, "skip": 12, "zero": 12, "depend": 12, "zp_energi": 12, "u_vib": 12, "vibrat": 12, "contribut": 12, "intern": 12, "constant": 12, "entropi": 12, "c_v": 12, "heat": 12, "harominc": 12, "scellphono": 12, "assum": 12, "reduc": [12, 14, 15], "from_frequ": 12, "ignore_natom": 12, "develop": 12, "attributeerror": 12, "neither": 12, "from_phonopi": 12, "phono_yaml": 12, "struc_yaml": 12, "q_id": 12, "q_coord": 12, "build": 12, "yaml": 12, "phonopy_disp": 12, "id": 12, "simultan": 12, "take": 12, "prioriti": 12, "ignor": 12, "au": 12, "nor": 12, "found": [12, 13, 14, 15], "sumphonon": 12, "mutewarn": 12, "kwarg": 12, "gibb": 12, "helmholtz": 12, "f": 12, "v": 12, "f_": 12, "vib": 12, "t": 12, "u_": 12, "g": [12, 13, 14, 15], "pv": 12, "across": 12, "sampl": 12, "ntemperatur": 12, "npressur": 12, "j": 12, "dure": [12, 14, 15], "write_ha_result": 12, "rank": 12, "ncalc": 12, "NOT": 12, "2pi": 12, "get_c_v": 12, "mathbf": 12, "frac": 12, "left": 12, "hbar": 12, "omega_": 12, "right": 12, "k_": 12, "get_entropi": 12, "s_": 12, "ln": 12, "get_gruneisen": 12, "gr\u00fcneisen": 12, "omega": 12, "partial": 12, "polynomial_fit": 12, "equilibrium": 12, "gruneisen": 12, "get_u_vib": 12, "298": 12, "15": 12, "u": 12, "zp": 12, "quantiti": 12, "get_zp_energi": 12, "fit": 12, "improv": 12, "accuraci": 12, "delta": 12, "term": 12, "v_": 12, "so": [12, 14, 15], "most": [12, 14, 15], "compact": 12, "further": 12, "poly_fit": 12, "poly_fit_rsquar": 12, "good": 12, "character": 12, "deal": 12, "write_qha_combinedata": 12, "quasi_harmon": 12, "write_qha_eosfit": 12, "write_qha_polyfit": 12, "rsquare_q": 12, "norder": 12, "overal": 12, "write_qha_sortphonon": 12, "close_overlap": 12, "write_qha_thermoeo": 12, "write_qha_thermofreq": 12, "min_method": 12, "volume_bound": 12, "write_qha_thermogru": 12, "write_bulk_modulu": 12, "adiabat": 12, "bulk": 12, "moduli": 12, "write_expansion_latt": 12, "e_err": 12, "fit_ord": 12, "r_squar": 12, "rm": 12, "deviat": 12, "nlatt": 12, "npress": 12, "write_expansion_vol": 12, "fit_r": 12, "volumetr": 12, "thermal": 12, "write_specific_heat": 12, "rearrang": 12, "obtain": 12, "write_out": 12, "from_qha_fil": 12, "qha_phonon": 12, "thermo_freq": 12, "eos_method": 12, "birch_murnaghan": 12, "_clean_attr": 12, "keep": 12, "_combine_data": 12, "ha_list": 12, "mode_sort_tol": 12, "ascend": 12, "combined_phonon": 12, "combined_volum": 12, "combined_edft": 12, "combined_mod": 12, "_get_harmonic_phonon": 12, "numer": 12, "analyt": 12, "express": 12, "standalon": 12, "_minimize_gibb": 12, "scipi": 12, "_minimize_latt": 12, "fe_eq": 12, "latt_ref": 12, "fe_ref": 12, "rmsd": 12, "php": 12, "expansion_vol": 12, "_phonon_continu": 12, "freq": 12, "continu": 12, "scalar": 12, "product": 12, "less": 12, "than": 12, "adopt": 12, "crystal17": 12, "erba": 12, "chem": 12, "phy": 12, "2014": 12, "141": 12, "124115": 12, "_poly_no_cst": 12, "low": 12, "bulk_modulu": 12, "isotherm": 12, "equat": 12, "vtk": 12, "c_": 12, "eoss": 12, "thermo_eo": 12, "mean": 12, "noth": 12, "form": 12, "restor": 12, "min_ndata_factor": 12, "max_poly_order_factor": 12, "min_poly_order_factor": 12, "k_t": 12, "eos_fit": 12, "relationship": 12, "deltafactor": 12, "numericaleo": 12, "expansion_lin": 12, "poly_ord": 12, "interp": 12, "taylor": 12, "g_": 12, "p_": 12, "math": 12, "hessian": 12, "displac": 12, "But": 12, "occur": 12, "larger": 12, "ensur": [12, 14, 15], "small": 12, "massag": 12, "n_": 12, "geq": 12, "sum_": 12, "lenth": 12, "minimi": 12, "raimbault": 12, "athaval": 12, "m": 12, "rossi": 12, "rev": 12, "materi": 12, "2019": 12, "053605": 12, "chosen": 12, "interpol": 12, "besid": 12, "ones": 12, "nlattic": 12, "latt_fit": 12, "part": [12, 14, 17], "alpha_latt": 12, "fit_fig": 12, "expansion_fit": 12, "alpha_": 12, "interact": [12, 14, 17], "window": [12, 14, 15], "pump": 12, "let": 12, "optimi": 12, "temper": 12, "help": 12, "vol_fit": 12, "alpha_v": 12, "freq_polynomial_fit": 12, "from_ha_fil": 12, "input_fil": 12, "ndimens": 12, "from_phonopy_fil": 12, "onc": 12, "applic": 12, "specific_heat": 12, "vt": 12, "c_p": 12, "thermo_gruneisen": 12, "wa": [12, 14, 15, 16], "disabl": 12, "deriv": 12, "fe_eo": 12, "fe_eos_method": 12, "bfg": 12, "minimis": 12, "algorithm": 12, "test": 12, "l": 12, "e0_eo": 12, "e0_eos_method": 12, "macroscop": 12, "textbf": 12, "gamma_": 12, "model": 12, "gru": 12, "_restore_pcel": 12, "expand": 12, "jupyt": [13, 14, 16], "notebook": [13, 14, 15, 16], "There": [13, 14], "py": [13, 14], "explain": [13, 14], "ipynb": [13, 14], "packag": [14, 15, 16], "allow": [14, 16], "infrastructur": [14, 16], "although": [14, 16], "goal": [14, 16], "own": [14, 16], "togeth": [14, 16], "latter": [14, 16], "scenario": [14, 16], "could": [14, 16], "seen": [14, 16], "januari": [14, 16], "2022": [14, 16], "stabl": [14, 16], "v2022": [14, 16], "releas": [14, 16], "latest": [14, 16], "pypi": [14, 15, 16], "pip": [14, 15, 16], "next": [14, 16], "section": [14, 15, 16], "mandatori": [14, 15], "veri": [14, 15], "smooth": [14, 15], "therefor": [14, 15], "recommend": [14, 15], "your": [14, 15], "abov": [14, 15], "ani": [14, 15], "suitabl": [14, 15], "distribut": [14, 15], "manag": [14, 15], "softwar": [14, 15], "upgrad": [14, 15], "curs": [14, 15], "done": [14, 15], "successfulli": [14, 15], "grep": [14, 15], "findstr": [14, 15], "insensit": [14, 15], "2023": [14, 15], "sourc": [14, 15], "someth": [14, 15], "went": [14, 15], "wrong": [14, 15], "locat": [14, 15], "being": [14, 15], "appear": [14, 15], "command": [14, 15], "common": [14, 15], "mistak": [14, 15], "stage": [14, 15], "decis": [14, 15], "transfer": [14, 15], "machin": [14, 15], "local": [14, 15], "path_to_your_runcri": [14, 15], "unit_test": [14, 15], "test_al": [14, 15], "data_test": [14, 15], "aim": [14, 17], "interfac": [14, 17], "central": [14, 17], "crystal_object": [14, 17], "flowchart": [14, 17], "show": [14, 17], "how": [14, 17], "crystalpytool": [16, 17], "instal": 16}, "objects": {"": [[0, 0, 0, "-", "CRYSTALpytools"]], "CRYSTALpytools": [[1, 0, 0, "-", "adsorb"], [7, 0, 0, "-", "calculate"], [8, 0, 0, "-", "convert"], [9, 0, 0, "-", "crystal_io"], [10, 0, 0, "-", "execute"], [11, 0, 0, "-", "plot"], [12, 0, 0, "-", "thermodynamics"]], "CRYSTALpytools.adsorb": [[1, 1, 1, "", "sub_ads_indices"]], "CRYSTALpytools.base": [[2, 0, 0, "-", "basisset"], [3, 0, 0, "-", "crysd12"], [4, 0, 0, "-", "crysout"], [5, 0, 0, "-", "inputbase"], [6, 0, 0, "-", "propout"]], "CRYSTALpytools.base.basisset": [[2, 2, 1, "", "BS_Atom"], [2, 2, 1, "", "BS_GTF"], [2, 2, 1, "", "BS_Shell"], [2, 2, 1, "", "BasisSetBASE"]], "CRYSTALpytools.base.basisset.BS_Atom": [[2, 3, 1, "", "_print_data"], [2, 3, 1, "", "_set_stdbs"], [2, 3, 1, "", "conventional_atomic_number"], [2, 4, 1, "", "data"]], "CRYSTALpytools.base.basisset.BS_GTF": [[2, 3, 1, "", "_print_data"], [2, 4, 1, "", "data"]], "CRYSTALpytools.base.basisset.BS_Shell": [[2, 3, 1, "", "_print_data"], [2, 4, 1, "", "data"]], "CRYSTALpytools.base.basisset.BasisSetBASE": [[2, 3, 1, "", "_set_atom"], [2, 4, 1, "", "data"], [2, 3, 1, "", "from_bse"], [2, 3, 1, "", "from_file"], [2, 3, 1, "", "from_string"], [2, 3, 1, "", "to_file"]], "CRYSTALpytools.base.crysd12": [[3, 2, 1, "", "BasisSet"], [3, 2, 1, "", "Crystal_inputBASE"], [3, 2, 1, "", "DFT"], [3, 2, 1, "", "DFTD3"], [3, 2, 1, "", "Freqcalc"], [3, 2, 1, "", "GCP"], [3, 2, 1, "", "Geom"], [3, 2, 1, "", "Optgeom"], [3, 2, 1, "", "SCF"]], "CRYSTALpytools.base.crysd12.BasisSet": [[3, 3, 1, "", "_check_bs"], [3, 3, 1, "", "basisset"], [3, 3, 1, "", "from_bse"], [3, 3, 1, "", "from_file"], [3, 3, 1, "", "from_obj"], [3, 3, 1, "", "from_string"], [3, 3, 1, "", "ghosts"]], "CRYSTALpytools.base.crysd12.Crystal_inputBASE": [[3, 4, 1, "", "basisset"], [3, 3, 1, "", "from_file"], [3, 4, 1, "", "geom"], [3, 4, 1, "", "scf"], [3, 3, 1, "", "set_basisset"], [3, 3, 1, "", "set_geom"], [3, 3, 1, "", "set_scf"], [3, 3, 1, "", "to_file"]], "CRYSTALpytools.base.crysd12.DFT": [[3, 3, 1, "", "angular"], [3, 3, 1, "", "correlat"], [3, 3, 1, "", "exchange"], [3, 3, 1, "", "lgrid"], [3, 3, 1, "", "oldgrid"], [3, 3, 1, "", "radial"], [3, 3, 1, "", "spin"], [3, 3, 1, "", "xcfunc"], [3, 3, 1, "", "xlgrid"], [3, 3, 1, "", "xxlgrid"], [3, 3, 1, "", "xxxlgrid"]], "CRYSTALpytools.base.crysd12.DFTD3": [[3, 3, 1, "", "a1"], [3, 3, 1, "", "a2"], [3, 3, 1, "", "abc"], [3, 3, 1, "", "abcradius"], [3, 3, 1, "", "cnradius"], [3, 3, 1, "", "func"], [3, 3, 1, "", "printc6"], [3, 3, 1, "", "radius"], [3, 3, 1, "", "rs6"], [3, 3, 1, "", "rs8"], [3, 3, 1, "", "s6"], [3, 3, 1, "", "s8"], [3, 3, 1, "", "version"]], "CRYSTALpytools.base.crysd12.Freqcalc": [[3, 3, 1, "", "bands"], [3, 3, 1, "", "dispersion"], [3, 3, 1, "", "modes"], [3, 3, 1, "", "nomodes"], [3, 3, 1, "", "nooptgeom"], [3, 3, 1, "", "numderiv"], [3, 4, 1, "", "optgeom"], [3, 3, 1, "", "preoptgeom"], [3, 3, 1, "", "pressure"], [3, 3, 1, "", "restart"], [3, 3, 1, "", "stepsize"], [3, 3, 1, "", "temperat"]], "CRYSTALpytools.base.crysd12.GCP": [[3, 3, 1, "", "alpha"], [3, 3, 1, "", "beta"], [3, 3, 1, "", "eta"], [3, 3, 1, "", "method"], [3, 3, 1, "", "printemiss"], [3, 3, 1, "", "radius"], [3, 3, 1, "", "sigma"]], "CRYSTALpytools.base.crysd12.Geom": [[3, 3, 1, "", "atomorde"], [3, 3, 1, "", "cifprt"], [3, 3, 1, "", "cifprtsym"], [3, 3, 1, "", "crystal"], [3, 4, 1, "", "data"], [3, 3, 1, "", "dlvinput"], [3, 3, 1, "", "external"], [3, 3, 1, "", "extprt"], [3, 4, 1, "", "freqcalc"], [3, 3, 1, "", "helix"], [3, 3, 1, "", "molecule"], [3, 3, 1, "", "moleiso"], [3, 4, 1, "", "optgeom"], [3, 3, 1, "", "polymer"], [3, 3, 1, "", "scelconf"], [3, 3, 1, "", "scelphono"], [3, 3, 1, "", "set_freqcalc"], [3, 3, 1, "", "set_optgeom"], [3, 3, 1, "", "slab"], [3, 3, 1, "", "supercel"], [3, 3, 1, "", "supercon"], [3, 3, 1, "", "testgeom"], [3, 3, 1, "", "title"]], "CRYSTALpytools.base.crysd12.Optgeom": [[3, 3, 1, "", "allowtrustr"], [3, 3, 1, "", "cellonly"], [3, 3, 1, "", "cvolopt"], [3, 3, 1, "", "extpress"], [3, 3, 1, "", "finalrun"], [3, 3, 1, "", "fragment"], [3, 3, 1, "", "fulloptg"], [3, 3, 1, "", "hessiden"], [3, 3, 1, "", "hessmod1"], [3, 3, 1, "", "hessmod2"], [3, 3, 1, "", "hessnum"], [3, 3, 1, "", "intredun"], [3, 3, 1, "", "itatocel"], [3, 3, 1, "", "maxcycle"], [3, 3, 1, "", "maxtradius"], [3, 3, 1, "", "nosymmops"], [3, 3, 1, "", "notrustr"], [3, 3, 1, "", "noxyz"], [3, 3, 1, "", "onelog"], [3, 3, 1, "", "print"], [3, 3, 1, "", "printforces"], [3, 3, 1, "", "printhess"], [3, 3, 1, "", "printopt"], [3, 3, 1, "", "restart"], [3, 3, 1, "", "toldee"], [3, 3, 1, "", "toldeg"], [3, 3, 1, "", "toldex"], [3, 3, 1, "", "trustradius"]], "CRYSTALpytools.base.crysd12.SCF": [[3, 3, 1, "", "atomspin"], [3, 3, 1, "", "biposize"], [3, 4, 1, "", "dft"], [3, 4, 1, "", "dftd3"], [3, 3, 1, "", "diis"], [3, 3, 1, "", "diisallk"], [3, 3, 1, "", "exchsize"], [3, 4, 1, "", "fixbase"], [3, 4, 1, "", "fixgeom"], [3, 3, 1, "", "fixindex"], [3, 3, 1, "", "fmixing"], [3, 4, 1, "", "gcp"], [3, 3, 1, "", "gcpauto"], [3, 3, 1, "", "guessp"], [3, 3, 1, "", "histdiis"], [3, 3, 1, "", "ldremo"], [3, 3, 1, "", "maxcycle"], [3, 3, 1, "", "nodiis"], [3, 3, 1, "", "ppan"], [3, 3, 1, "", "prtdiis"], [3, 3, 1, "", "set_dft"], [3, 3, 1, "", "set_dftd3"], [3, 3, 1, "", "set_gcp"], [3, 3, 1, "", "shrink"], [3, 3, 1, "", "smear"], [3, 3, 1, "", "toldee"], [3, 3, 1, "", "tolinteg"]], "CRYSTALpytools.base.crysout": [[4, 2, 1, "", "PhononBASE"]], "CRYSTALpytools.base.crysout.PhononBASE": [[4, 3, 1, "", "clean_imaginary"], [4, 3, 1, "", "clean_q_overlap"], [4, 3, 1, "", "readmode_basic"], [4, 3, 1, "", "readmode_eigenvector"]], "CRYSTALpytools.base.inputbase": [[5, 2, 1, "", "BlockBASE"]], "CRYSTALpytools.base.inputbase.BlockBASE": [[5, 3, 1, "", "analyze_text"], [5, 3, 1, "", "assign_keyword"], [5, 3, 1, "", "clean_block"], [5, 3, 1, "", "clean_conflict"], [5, 4, 1, "", "data"], [5, 3, 1, "", "set_list"], [5, 3, 1, "", "set_matrix"], [5, 3, 1, "", "update_block"]], "CRYSTALpytools.base.propout": [[6, 2, 1, "", "BandsBASE"], [6, 2, 1, "", "DOSBASE"]], "CRYSTALpytools.base.propout.BandsBASE": [[6, 3, 1, "", "BAND_parser"], [6, 3, 1, "", "f25_parser"]], "CRYSTALpytools.base.propout.DOSBASE": [[6, 3, 1, "", "DOSS_parser"], [6, 3, 1, "", "f25_parser"]], "CRYSTALpytools.calculate": [[7, 1, 1, "", "cry_ads_energy"], [7, 1, 1, "", "cry_shrink"]], "CRYSTALpytools.convert": [[8, 1, 1, "", "cry_ase2gui"], [8, 1, 1, "", "cry_bands2pmg"], [8, 1, 1, "", "cry_gui2ase"], [8, 1, 1, "", "cry_gui2cif"], [8, 1, 1, "", "cry_gui2pmg"], [8, 1, 1, "", "cry_gui2xyz"], [8, 1, 1, "", "cry_out2ase"], [8, 1, 1, "", "cry_out2cif"], [8, 1, 1, "", "cry_out2pmg"], [8, 1, 1, "", "cry_out2xyz"], [8, 1, 1, "", "cry_pmg2gui"]], "CRYSTALpytools.crystal_io": [[9, 2, 1, "", "Crystal_density"], [9, 2, 1, "", "Crystal_gui"], [9, 2, 1, "", "Crystal_input"], [9, 2, 1, "", "Crystal_output"], [9, 2, 1, "", "Properties_input"], [9, 2, 1, "", "Properties_output"], [9, 1, 1, "", "cry_combine_density"], [9, 1, 1, "", "write_cry_density"]], "CRYSTALpytools.crystal_io.Crystal_density": [[9, 3, 1, "", "read_cry_irr_density"]], "CRYSTALpytools.crystal_io.Crystal_gui": [[9, 3, 1, "", "read_gui"], [9, 3, 1, "", "write_gui"]], "CRYSTALpytools.crystal_io.Crystal_input": [[9, 3, 1, "", "_pmg2input"], [9, 3, 1, "", "geom_from_cif"], [9, 3, 1, "", "geom_from_pmg"]], "CRYSTALpytools.crystal_io.Crystal_output": [[9, 3, 1, "", "get_band_gap"], [9, 3, 1, "", "get_config_analysis"], [9, 3, 1, "", "get_dielectric_tensor"], [9, 3, 1, "", "get_dimensionality"], [9, 3, 1, "", "get_eigenvectors"], [9, 3, 1, "", "get_elatensor"], [9, 3, 1, "", "get_fermi_energy"], [9, 3, 1, "", "get_final_energy"], [9, 3, 1, "", "get_forces"], [9, 3, 1, "", "get_last_geom"], [9, 3, 1, "", "get_mode"], [9, 3, 1, "", "get_mulliken_charges"], [9, 3, 1, "", "get_num_cycles"], [9, 3, 1, "", "get_opt_convergence_energy"], [9, 3, 1, "", "get_phonon"], [9, 3, 1, "", "get_phonon_eigenvector"], [9, 3, 1, "", "get_primitive_lattice"], [9, 3, 1, "", "get_q_info"], [9, 3, 1, "", "get_reciprocal_lattice"], [9, 3, 1, "", "get_scf_convergence"], [9, 3, 1, "", "get_symm_ops"], [9, 3, 1, "", "read_cry_output"]], "CRYSTALpytools.crystal_io.Properties_input": [[9, 3, 1, "", "from_file"], [9, 3, 1, "", "make_bands_block"], [9, 3, 1, "", "make_doss_block"], [9, 3, 1, "", "make_newk_block"], [9, 3, 1, "", "make_pdoss_block"], [9, 3, 1, "", "write_properties_input"]], "CRYSTALpytools.crystal_io.Properties_output": [[9, 3, 1, "", "read_cry_bands"], [9, 3, 1, "", "read_cry_contour"], [9, 3, 1, "", "read_cry_density_profile"], [9, 3, 1, "", "read_cry_doss"], [9, 3, 1, "", "read_cry_lapl_profile"], [9, 3, 1, "", "read_cry_rholine"], [9, 3, 1, "", "read_cry_seebeck"], [9, 3, 1, "", "read_cry_sigma"], [9, 3, 1, "", "read_cry_xrd_spec"], [9, 3, 1, "", "read_electron_band"], [9, 3, 1, "", "read_electron_dos"], [9, 3, 1, "", "read_file"], [9, 3, 1, "", "read_vecfield"]], "CRYSTALpytools.execute": [[10, 1, 1, "", "runcry"], [10, 1, 1, "", "runprop"], [10, 1, 1, "", "set_runcry_path"], [10, 1, 1, "", "set_runprop_path"]], "CRYSTALpytools.plot": [[11, 1, 1, "", "plot_cry_bands"], [11, 1, 1, "", "plot_cry_comp"], [11, 1, 1, "", "plot_cry_contour"], [11, 1, 1, "", "plot_cry_contour_differences"], [11, 1, 1, "", "plot_cry_density_profile"], [11, 1, 1, "", "plot_cry_doss"], [11, 1, 1, "", "plot_cry_ela"], [11, 1, 1, "", "plot_cry_es"], [11, 1, 1, "", "plot_cry_lapl_profile"], [11, 1, 1, "", "plot_cry_multiseebeck"], [11, 1, 1, "", "plot_cry_multisigma"], [11, 1, 1, "", "plot_cry_poisson"], [11, 1, 1, "", "plot_cry_powerfactor_carrier"], [11, 1, 1, "", "plot_cry_powerfactor_potential"], [11, 1, 1, "", "plot_cry_rholine"], [11, 1, 1, "", "plot_cry_seebeck_carrier"], [11, 1, 1, "", "plot_cry_seebeck_potential"], [11, 1, 1, "", "plot_cry_shear"], [11, 1, 1, "", "plot_cry_sigma_carrier"], [11, 1, 1, "", "plot_cry_sigma_potential"], [11, 1, 1, "", "plot_cry_xrd"], [11, 1, 1, "", "plot_cry_young"], [11, 1, 1, "", "plot_cry_zt"], [11, 1, 1, "", "plot_electron_band"], [11, 1, 1, "", "plot_electron_banddos"], [11, 1, 1, "", "plot_electron_dos"], [11, 1, 1, "", "plot_phonon_band"], [11, 1, 1, "", "plot_phonon_banddos"], [11, 1, 1, "", "plot_phonon_dos"], [11, 1, 1, "", "plot_vecfield2D_J"], [11, 1, 1, "", "plot_vecfield2D_j"], [11, 1, 1, "", "plot_vecfield2D_m"], [11, 1, 1, "", "save_plot"]], "CRYSTALpytools.thermodynamics": [[12, 2, 1, "", "Harmonic"], [12, 2, 1, "", "Mode"], [12, 2, 1, "", "Output"], [12, 2, 1, "", "Quasi_harmonic"], [12, 1, 1, "", "_restore_pcel"]], "CRYSTALpytools.thermodynamics.Harmonic": [[12, 3, 1, "", "_phonon_sumup"], [12, 3, 1, "", "from_file"], [12, 3, 1, "", "from_frequency"], [12, 3, 1, "", "from_phonopy"], [12, 3, 1, "", "thermodynamics"], [12, 3, 1, "", "write_HA_result"]], "CRYSTALpytools.thermodynamics.Mode": [[12, 3, 1, "", "get_c_v"], [12, 3, 1, "", "get_entropy"], [12, 3, 1, "", "get_gruneisen"], [12, 3, 1, "", "get_u_vib"], [12, 3, 1, "", "get_zp_energy"], [12, 3, 1, "", "polynomial_fit"]], "CRYSTALpytools.thermodynamics.Output": [[12, 3, 1, "", "write_HA_result"], [12, 3, 1, "", "write_QHA_combinedata"], [12, 3, 1, "", "write_QHA_eosfit"], [12, 3, 1, "", "write_QHA_polyfit"], [12, 3, 1, "", "write_QHA_sortphonon"], [12, 3, 1, "", "write_QHA_thermoeos"], [12, 3, 1, "", "write_QHA_thermofreq"], [12, 3, 1, "", "write_QHA_thermogru"], [12, 3, 1, "", "write_bulk_modulus"], [12, 3, 1, "", "write_expansion_latt"], [12, 3, 1, "", "write_expansion_vol"], [12, 3, 1, "", "write_specific_heat"]], "CRYSTALpytools.thermodynamics.Quasi_harmonic": [[12, 3, 1, "", "_clean_attr"], [12, 3, 1, "", "_combine_data"], [12, 3, 1, "", "_get_harmonic_phonon"], [12, 3, 1, "", "_minimize_gibbs"], [12, 3, 1, "", "_minimize_latt"], [12, 3, 1, "", "_phonon_continuity"], [12, 3, 1, "", "_poly_no_cst"], [12, 3, 1, "", "bulk_modulus"], [12, 3, 1, "", "eos_fit"], [12, 3, 1, "", "expansion_lin"], [12, 3, 1, "", "expansion_vol"], [12, 3, 1, "", "freq_polynomial_fit"], [12, 3, 1, "", "from_HA_files"], [12, 3, 1, "", "from_QHA_file"], [12, 3, 1, "", "from_phonopy_files"], [12, 3, 1, "", "specific_heat"], [12, 3, 1, "", "thermo_eos"], [12, 3, 1, "", "thermo_freq"], [12, 3, 1, "", "thermo_gruneisen"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"crystalpytool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15], "packag": 0, "submodul": 0, "develop": [0, 5], "adsorb": 1, "modul": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "base": [2, 3, 4, 5, 6], "basisset": 2, "crysd12": 3, "crysout": 4, "inputbas": 5, "structur": 5, "class": 5, "add": 5, "keyword": 5, "relat": 5, "method": 5, "address": 5, "conflict": 5, "plan": 5, "propout": 6, "calcul": 7, "convert": 8, "crystal_io": 9, "execut": 10, "plot": 11, "thermodynam": 12, "exampl": [13, 14], "tutori": [13, 14], "introduct": [14, 16], "instal": [14, 15], "creat": [14, 15], "conda": [14, 15], "anaconda": [14, 15], "environ": [14, 15], "set": [14, 15], "path": [14, 15], "runcri": [14, 15], "runprop": [14, 15], "test": [14, 15], "usag": [14, 17]}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"CRYSTALpytools Package": [[0, "module-CRYSTALpytools"]], "Submodules": [[0, "submodules"]], "Developers": [[0, "developers"]], "CRYSTALpytools.adsorb module": [[1, "module-CRYSTALpytools.adsorb"]], "CRYSTALpytools.base.basisset module": [[2, "crystalpytools-base-basisset-module"]], "CRYSTALpytools.base.crysd12 module": [[3, "crystalpytools-base-crysd12-module"]], "CRYSTALpytools.base.crysout module": [[4, "crystalpytools-base-crysout-module"]], "CRYSTALpytools.base.inputbase module": [[5, "crystalpytools-base-inputbase-module"]], "Structure of classes": [[5, "structure-of-classes"]], "Add keyword-related methods": [[5, "add-keyword-related-methods"]], "Address conflicts": [[5, "address-conflicts"]], "Planned developments": [[5, "planned-developments"]], "CRYSTALpytools.base.propout module": [[6, "crystalpytools-base-propout-module"]], "CRYSTALpytools.calculate module": [[7, "module-CRYSTALpytools.calculate"]], "CRYSTALpytools.convert module": [[8, "module-CRYSTALpytools.convert"]], "CRYSTALpytools.crystal_io module": [[9, "crystalpytools-crystal-io-module"]], "CRYSTALpytools.execute module": [[10, "module-CRYSTALpytools.execute"]], "CRYSTALpytools.plot module": [[11, "module-CRYSTALpytools.plot"]], "CRYSTALpytools.thermodynamics module": [[12, "module-CRYSTALpytools.thermodynamics"]], "Examples and Tutorials": [[13, "examples-and-tutorials"], [14, "examples-and-tutorials"]], "Introduction": [[14, "introduction"], [16, "introduction"]], "Installation": [[14, "installation"], [15, "installation"]], "Create a conda/anaconda environment": [[14, "create-a-conda-anaconda-environment"], [15, "create-a-conda-anaconda-environment"]], "Install CRYSTALpytools": [[14, "install-crystalpytools"], [15, "install-crystalpytools"]], "Set the path to runcry and runprop": [[14, "set-the-path-to-runcry-and-runprop"], [15, "set-the-path-to-runcry-and-runprop"]], "Testing": [[14, "testing"], [15, "testing"]], "Usage": [[14, "usage"], [17, "usage"]]}, "indexentries": {"crystalpytools": [[0, "module-CRYSTALpytools"]], "module": [[0, "module-CRYSTALpytools"], [1, "module-CRYSTALpytools.adsorb"], [2, "module-CRYSTALpytools.base.basisset"], [3, "module-CRYSTALpytools.base.crysd12"], [4, "module-CRYSTALpytools.base.crysout"], [5, "module-CRYSTALpytools.base.inputbase"], [6, "module-CRYSTALpytools.base.propout"], [7, "module-CRYSTALpytools.calculate"], [8, "module-CRYSTALpytools.convert"], [9, "module-CRYSTALpytools.crystal_io"], [10, "module-CRYSTALpytools.execute"], [11, "module-CRYSTALpytools.plot"], [12, "module-CRYSTALpytools.thermodynamics"]], "crystalpytools.adsorb": [[1, "module-CRYSTALpytools.adsorb"]], "sub_ads_indices() (in module crystalpytools.adsorb)": [[1, "CRYSTALpytools.adsorb.sub_ads_indices"]], "bs_atom (class in crystalpytools.base.basisset)": [[2, "CRYSTALpytools.base.basisset.BS_Atom"]], "bs_gtf (class in crystalpytools.base.basisset)": [[2, "CRYSTALpytools.base.basisset.BS_GTF"]], "bs_shell (class in crystalpytools.base.basisset)": [[2, "CRYSTALpytools.base.basisset.BS_Shell"]], "basissetbase (class in crystalpytools.base.basisset)": [[2, "CRYSTALpytools.base.basisset.BasisSetBASE"]], "crystalpytools.base.basisset": [[2, "module-CRYSTALpytools.base.basisset"]], "_print_data() (bs_atom method)": [[2, "CRYSTALpytools.base.basisset.BS_Atom._print_data"]], "_print_data() (bs_gtf method)": [[2, "CRYSTALpytools.base.basisset.BS_GTF._print_data"]], "_print_data() (bs_shell method)": [[2, "CRYSTALpytools.base.basisset.BS_Shell._print_data"]], "_set_atom() (basissetbase method)": [[2, "CRYSTALpytools.base.basisset.BasisSetBASE._set_atom"]], "_set_stdbs() (bs_atom method)": [[2, "CRYSTALpytools.base.basisset.BS_Atom._set_stdbs"]], "conventional_atomic_number() (bs_atom method)": [[2, "CRYSTALpytools.base.basisset.BS_Atom.conventional_atomic_number"]], "data (bs_atom property)": [[2, "CRYSTALpytools.base.basisset.BS_Atom.data"]], "data (bs_gtf property)": [[2, "CRYSTALpytools.base.basisset.BS_GTF.data"]], "data (bs_shell property)": [[2, "CRYSTALpytools.base.basisset.BS_Shell.data"]], "data (basissetbase property)": [[2, "CRYSTALpytools.base.basisset.BasisSetBASE.data"]], "from_bse() (basissetbase class method)": [[2, "CRYSTALpytools.base.basisset.BasisSetBASE.from_bse"]], "from_file() (basissetbase class method)": [[2, "CRYSTALpytools.base.basisset.BasisSetBASE.from_file"]], "from_string() (basissetbase class method)": [[2, "CRYSTALpytools.base.basisset.BasisSetBASE.from_string"]], "to_file() (basissetbase method)": [[2, "CRYSTALpytools.base.basisset.BasisSetBASE.to_file"]], "basisset (class in crystalpytools.base.crysd12)": [[3, "CRYSTALpytools.base.crysd12.BasisSet"]], "crystalpytools.base.crysd12": [[3, "module-CRYSTALpytools.base.crysd12"]], "crystal_inputbase (class in crystalpytools.base.crysd12)": [[3, "CRYSTALpytools.base.crysd12.Crystal_inputBASE"]], "dft (class in crystalpytools.base.crysd12)": [[3, "CRYSTALpytools.base.crysd12.DFT"]], "dftd3 (class in crystalpytools.base.crysd12)": [[3, "CRYSTALpytools.base.crysd12.DFTD3"]], "freqcalc (class in crystalpytools.base.crysd12)": [[3, "CRYSTALpytools.base.crysd12.Freqcalc"]], "gcp (class in crystalpytools.base.crysd12)": [[3, "CRYSTALpytools.base.crysd12.GCP"]], "geom (class in crystalpytools.base.crysd12)": [[3, "CRYSTALpytools.base.crysd12.Geom"]], "optgeom (class in crystalpytools.base.crysd12)": [[3, "CRYSTALpytools.base.crysd12.Optgeom"]], "scf (class in crystalpytools.base.crysd12)": [[3, "CRYSTALpytools.base.crysd12.SCF"]], "_check_bs() (basisset method)": [[3, "CRYSTALpytools.base.crysd12.BasisSet._check_bs"]], "a1() (dftd3 method)": [[3, "CRYSTALpytools.base.crysd12.DFTD3.a1"]], "a2() (dftd3 method)": [[3, "CRYSTALpytools.base.crysd12.DFTD3.a2"]], "abc() (dftd3 method)": [[3, "CRYSTALpytools.base.crysd12.DFTD3.abc"]], "abcradius() (dftd3 method)": [[3, "CRYSTALpytools.base.crysd12.DFTD3.abcradius"]], "allowtrustr() (optgeom method)": [[3, "CRYSTALpytools.base.crysd12.Optgeom.allowtrustr"]], "alpha() (gcp method)": [[3, "CRYSTALpytools.base.crysd12.GCP.alpha"]], "angular() (dft method)": [[3, "CRYSTALpytools.base.crysd12.DFT.angular"]], "atomorde() (geom method)": [[3, "CRYSTALpytools.base.crysd12.Geom.atomorde"]], "atomspin() (scf method)": [[3, "CRYSTALpytools.base.crysd12.SCF.atomspin"]], "bands() (freqcalc method)": [[3, "CRYSTALpytools.base.crysd12.Freqcalc.bands"]], "basisset (crystal_inputbase property)": [[3, "CRYSTALpytools.base.crysd12.Crystal_inputBASE.basisset"]], "basisset() (basisset method)": [[3, "CRYSTALpytools.base.crysd12.BasisSet.basisset"]], "beta() (gcp method)": [[3, "CRYSTALpytools.base.crysd12.GCP.beta"]], "biposize() (scf method)": [[3, "CRYSTALpytools.base.crysd12.SCF.biposize"]], "cellonly() (optgeom method)": [[3, "CRYSTALpytools.base.crysd12.Optgeom.cellonly"]], "cifprt() (geom method)": [[3, "CRYSTALpytools.base.crysd12.Geom.cifprt"]], "cifprtsym() (geom method)": [[3, "CRYSTALpytools.base.crysd12.Geom.cifprtsym"]], "cnradius() (dftd3 method)": [[3, "CRYSTALpytools.base.crysd12.DFTD3.cnradius"]], "correlat() (dft method)": [[3, "CRYSTALpytools.base.crysd12.DFT.correlat"]], "crystal() (geom method)": [[3, "CRYSTALpytools.base.crysd12.Geom.crystal"]], "cvolopt() (optgeom method)": [[3, "CRYSTALpytools.base.crysd12.Optgeom.cvolopt"]], "data (geom property)": [[3, "CRYSTALpytools.base.crysd12.Geom.data"]], "dft (scf property)": [[3, "CRYSTALpytools.base.crysd12.SCF.dft"]], "dftd3 (scf property)": [[3, "CRYSTALpytools.base.crysd12.SCF.dftd3"]], "diis() (scf method)": [[3, "CRYSTALpytools.base.crysd12.SCF.diis"]], "diisallk() (scf method)": [[3, "CRYSTALpytools.base.crysd12.SCF.diisallk"]], "dispersion() (freqcalc method)": [[3, "CRYSTALpytools.base.crysd12.Freqcalc.dispersion"]], "dlvinput() (geom method)": [[3, "CRYSTALpytools.base.crysd12.Geom.dlvinput"]], "eta() (gcp method)": [[3, "CRYSTALpytools.base.crysd12.GCP.eta"]], "exchange() (dft method)": [[3, "CRYSTALpytools.base.crysd12.DFT.exchange"]], "exchsize() (scf method)": [[3, "CRYSTALpytools.base.crysd12.SCF.exchsize"]], "external() (geom method)": [[3, "CRYSTALpytools.base.crysd12.Geom.external"]], "extpress() (optgeom method)": [[3, "CRYSTALpytools.base.crysd12.Optgeom.extpress"]], "extprt() (geom method)": [[3, "CRYSTALpytools.base.crysd12.Geom.extprt"]], "finalrun() (optgeom method)": [[3, "CRYSTALpytools.base.crysd12.Optgeom.finalrun"]], "fixbase (scf property)": [[3, "CRYSTALpytools.base.crysd12.SCF.fixbase"]], "fixgeom (scf property)": [[3, "CRYSTALpytools.base.crysd12.SCF.fixgeom"]], "fixindex() (scf method)": [[3, "CRYSTALpytools.base.crysd12.SCF.fixindex"]], "fmixing() (scf method)": [[3, "CRYSTALpytools.base.crysd12.SCF.fmixing"]], "fragment() (optgeom method)": [[3, "CRYSTALpytools.base.crysd12.Optgeom.fragment"]], "freqcalc (geom property)": [[3, "CRYSTALpytools.base.crysd12.Geom.freqcalc"]], "from_bse() (basisset method)": [[3, "CRYSTALpytools.base.crysd12.BasisSet.from_bse"]], "from_file() (basisset method)": [[3, "CRYSTALpytools.base.crysd12.BasisSet.from_file"]], "from_file() (crystal_inputbase method)": [[3, "CRYSTALpytools.base.crysd12.Crystal_inputBASE.from_file"]], "from_obj() (basisset method)": [[3, "CRYSTALpytools.base.crysd12.BasisSet.from_obj"]], "from_string() (basisset method)": [[3, "CRYSTALpytools.base.crysd12.BasisSet.from_string"]], "fulloptg() (optgeom method)": [[3, "CRYSTALpytools.base.crysd12.Optgeom.fulloptg"]], "func() (dftd3 method)": [[3, "CRYSTALpytools.base.crysd12.DFTD3.func"]], "gcp (scf property)": [[3, "CRYSTALpytools.base.crysd12.SCF.gcp"]], "gcpauto() (scf method)": [[3, "CRYSTALpytools.base.crysd12.SCF.gcpauto"]], "geom (crystal_inputbase property)": [[3, "CRYSTALpytools.base.crysd12.Crystal_inputBASE.geom"]], "ghosts() (basisset method)": [[3, "CRYSTALpytools.base.crysd12.BasisSet.ghosts"]], "guessp() (scf method)": [[3, "CRYSTALpytools.base.crysd12.SCF.guessp"]], "helix() (geom method)": [[3, "CRYSTALpytools.base.crysd12.Geom.helix"]], "hessiden() (optgeom method)": [[3, "CRYSTALpytools.base.crysd12.Optgeom.hessiden"]], "hessmod1() (optgeom method)": [[3, "CRYSTALpytools.base.crysd12.Optgeom.hessmod1"]], "hessmod2() (optgeom method)": [[3, "CRYSTALpytools.base.crysd12.Optgeom.hessmod2"]], "hessnum() (optgeom method)": [[3, "CRYSTALpytools.base.crysd12.Optgeom.hessnum"]], "histdiis() (scf method)": [[3, "CRYSTALpytools.base.crysd12.SCF.histdiis"]], "intredun() (optgeom method)": [[3, "CRYSTALpytools.base.crysd12.Optgeom.intredun"]], "itatocel() (optgeom method)": [[3, "CRYSTALpytools.base.crysd12.Optgeom.itatocel"]], "ldremo() (scf method)": [[3, "CRYSTALpytools.base.crysd12.SCF.ldremo"]], "lgrid() (dft method)": [[3, "CRYSTALpytools.base.crysd12.DFT.lgrid"]], "maxcycle() (optgeom method)": [[3, "CRYSTALpytools.base.crysd12.Optgeom.maxcycle"]], "maxcycle() (scf method)": [[3, "CRYSTALpytools.base.crysd12.SCF.maxcycle"]], "maxtradius() (optgeom method)": [[3, "CRYSTALpytools.base.crysd12.Optgeom.maxtradius"]], "method() (gcp method)": [[3, "CRYSTALpytools.base.crysd12.GCP.method"]], "modes() (freqcalc method)": [[3, "CRYSTALpytools.base.crysd12.Freqcalc.modes"]], "molecule() (geom method)": [[3, "CRYSTALpytools.base.crysd12.Geom.molecule"]], "moleiso() (geom method)": [[3, "CRYSTALpytools.base.crysd12.Geom.moleiso"]], "nodiis() (scf method)": [[3, "CRYSTALpytools.base.crysd12.SCF.nodiis"]], "nomodes() (freqcalc method)": [[3, "CRYSTALpytools.base.crysd12.Freqcalc.nomodes"]], "nooptgeom() (freqcalc method)": [[3, "CRYSTALpytools.base.crysd12.Freqcalc.nooptgeom"]], "nosymmops() (optgeom method)": [[3, "CRYSTALpytools.base.crysd12.Optgeom.nosymmops"]], "notrustr() (optgeom method)": [[3, "CRYSTALpytools.base.crysd12.Optgeom.notrustr"]], "noxyz() (optgeom method)": [[3, "CRYSTALpytools.base.crysd12.Optgeom.noxyz"]], "numderiv() (freqcalc method)": [[3, "CRYSTALpytools.base.crysd12.Freqcalc.numderiv"]], "oldgrid() (dft method)": [[3, "CRYSTALpytools.base.crysd12.DFT.oldgrid"]], "onelog() (optgeom method)": [[3, "CRYSTALpytools.base.crysd12.Optgeom.onelog"]], "optgeom (freqcalc property)": [[3, "CRYSTALpytools.base.crysd12.Freqcalc.optgeom"]], "optgeom (geom property)": [[3, "CRYSTALpytools.base.crysd12.Geom.optgeom"]], "polymer() (geom method)": [[3, "CRYSTALpytools.base.crysd12.Geom.polymer"]], "ppan() (scf method)": [[3, "CRYSTALpytools.base.crysd12.SCF.ppan"]], "preoptgeom() (freqcalc method)": [[3, "CRYSTALpytools.base.crysd12.Freqcalc.preoptgeom"]], "pressure() (freqcalc method)": [[3, "CRYSTALpytools.base.crysd12.Freqcalc.pressure"]], "print() (optgeom method)": [[3, "CRYSTALpytools.base.crysd12.Optgeom.print"]], "printc6() (dftd3 method)": [[3, "CRYSTALpytools.base.crysd12.DFTD3.printc6"]], "printemiss() (gcp method)": [[3, "CRYSTALpytools.base.crysd12.GCP.printemiss"]], "printforces() (optgeom method)": [[3, "CRYSTALpytools.base.crysd12.Optgeom.printforces"]], "printhess() (optgeom method)": [[3, "CRYSTALpytools.base.crysd12.Optgeom.printhess"]], "printopt() (optgeom method)": [[3, "CRYSTALpytools.base.crysd12.Optgeom.printopt"]], "prtdiis() (scf method)": [[3, "CRYSTALpytools.base.crysd12.SCF.prtdiis"]], "radial() (dft method)": [[3, "CRYSTALpytools.base.crysd12.DFT.radial"]], "radius() (dftd3 method)": [[3, "CRYSTALpytools.base.crysd12.DFTD3.radius"]], "radius() (gcp method)": [[3, "CRYSTALpytools.base.crysd12.GCP.radius"]], "restart() (freqcalc method)": [[3, "CRYSTALpytools.base.crysd12.Freqcalc.restart"]], "restart() (optgeom method)": [[3, "CRYSTALpytools.base.crysd12.Optgeom.restart"]], "rs6() (dftd3 method)": [[3, "CRYSTALpytools.base.crysd12.DFTD3.rs6"]], "rs8() (dftd3 method)": [[3, "CRYSTALpytools.base.crysd12.DFTD3.rs8"]], "s6() (dftd3 method)": [[3, "CRYSTALpytools.base.crysd12.DFTD3.s6"]], "s8() (dftd3 method)": [[3, "CRYSTALpytools.base.crysd12.DFTD3.s8"]], "scelconf() (geom method)": [[3, "CRYSTALpytools.base.crysd12.Geom.scelconf"]], "scelphono() (geom method)": [[3, "CRYSTALpytools.base.crysd12.Geom.scelphono"]], "scf (crystal_inputbase property)": [[3, "CRYSTALpytools.base.crysd12.Crystal_inputBASE.scf"]], "set_basisset() (crystal_inputbase method)": [[3, "CRYSTALpytools.base.crysd12.Crystal_inputBASE.set_basisset"]], "set_dft() (scf method)": [[3, "CRYSTALpytools.base.crysd12.SCF.set_dft"]], "set_dftd3() (scf method)": [[3, "CRYSTALpytools.base.crysd12.SCF.set_dftd3"]], "set_freqcalc() (geom method)": [[3, "CRYSTALpytools.base.crysd12.Geom.set_freqcalc"]], "set_gcp() (scf method)": [[3, "CRYSTALpytools.base.crysd12.SCF.set_gcp"]], "set_geom() (crystal_inputbase method)": [[3, "CRYSTALpytools.base.crysd12.Crystal_inputBASE.set_geom"]], "set_optgeom() (geom method)": [[3, "CRYSTALpytools.base.crysd12.Geom.set_optgeom"]], "set_scf() (crystal_inputbase method)": [[3, "CRYSTALpytools.base.crysd12.Crystal_inputBASE.set_scf"]], "shrink() (scf method)": [[3, "CRYSTALpytools.base.crysd12.SCF.shrink"]], "sigma() (gcp method)": [[3, "CRYSTALpytools.base.crysd12.GCP.sigma"]], "slab() (geom method)": [[3, "CRYSTALpytools.base.crysd12.Geom.slab"]], "smear() (scf method)": [[3, "CRYSTALpytools.base.crysd12.SCF.smear"]], "spin() (dft method)": [[3, "CRYSTALpytools.base.crysd12.DFT.spin"]], "stepsize() (freqcalc method)": [[3, "CRYSTALpytools.base.crysd12.Freqcalc.stepsize"]], "supercel() (geom method)": [[3, "CRYSTALpytools.base.crysd12.Geom.supercel"]], "supercon() (geom method)": [[3, "CRYSTALpytools.base.crysd12.Geom.supercon"]], "temperat() (freqcalc method)": [[3, "CRYSTALpytools.base.crysd12.Freqcalc.temperat"]], "testgeom() (geom method)": [[3, "CRYSTALpytools.base.crysd12.Geom.testgeom"]], "title() (geom method)": [[3, "CRYSTALpytools.base.crysd12.Geom.title"]], "to_file() (crystal_inputbase method)": [[3, "CRYSTALpytools.base.crysd12.Crystal_inputBASE.to_file"]], "toldee() (optgeom method)": [[3, "CRYSTALpytools.base.crysd12.Optgeom.toldee"]], "toldee() (scf method)": [[3, "CRYSTALpytools.base.crysd12.SCF.toldee"]], "toldeg() (optgeom method)": [[3, "CRYSTALpytools.base.crysd12.Optgeom.toldeg"]], "toldex() (optgeom method)": [[3, "CRYSTALpytools.base.crysd12.Optgeom.toldex"]], "tolinteg() (scf method)": [[3, "CRYSTALpytools.base.crysd12.SCF.tolinteg"]], "trustradius() (optgeom method)": [[3, "CRYSTALpytools.base.crysd12.Optgeom.trustradius"]], "version() (dftd3 method)": [[3, "CRYSTALpytools.base.crysd12.DFTD3.version"]], "xcfunc() (dft method)": [[3, "CRYSTALpytools.base.crysd12.DFT.xcfunc"]], "xlgrid() (dft method)": [[3, "CRYSTALpytools.base.crysd12.DFT.xlgrid"]], "xxlgrid() (dft method)": [[3, "CRYSTALpytools.base.crysd12.DFT.xxlgrid"]], "xxxlgrid() (dft method)": [[3, "CRYSTALpytools.base.crysd12.DFT.xxxlgrid"]], "crystalpytools.base.crysout": [[4, "module-CRYSTALpytools.base.crysout"]], "phononbase (class in crystalpytools.base.crysout)": [[4, "CRYSTALpytools.base.crysout.PhononBASE"]], "clean_imaginary() (phononbase class method)": [[4, "CRYSTALpytools.base.crysout.PhononBASE.clean_imaginary"]], "clean_q_overlap() (phononbase class method)": [[4, "CRYSTALpytools.base.crysout.PhononBASE.clean_q_overlap"]], "readmode_basic() (phononbase class method)": [[4, "CRYSTALpytools.base.crysout.PhononBASE.readmode_basic"]], "readmode_eigenvector() (phononbase class method)": [[4, "CRYSTALpytools.base.crysout.PhononBASE.readmode_eigenvector"]], "blockbase (class in crystalpytools.base.inputbase)": [[5, "CRYSTALpytools.base.inputbase.BlockBASE"]], "crystalpytools.base.inputbase": [[5, "module-CRYSTALpytools.base.inputbase"]], "analyze_text() (blockbase method)": [[5, "CRYSTALpytools.base.inputbase.BlockBASE.analyze_text"]], "assign_keyword() (blockbase static method)": [[5, "CRYSTALpytools.base.inputbase.BlockBASE.assign_keyword"]], "clean_block() (blockbase method)": [[5, "CRYSTALpytools.base.inputbase.BlockBASE.clean_block"]], "clean_conflict() (blockbase method)": [[5, "CRYSTALpytools.base.inputbase.BlockBASE.clean_conflict"]], "data (blockbase property)": [[5, "CRYSTALpytools.base.inputbase.BlockBASE.data"]], "set_list() (blockbase static method)": [[5, "CRYSTALpytools.base.inputbase.BlockBASE.set_list"]], "set_matrix() (blockbase static method)": [[5, "CRYSTALpytools.base.inputbase.BlockBASE.set_matrix"]], "update_block() (blockbase method)": [[5, "CRYSTALpytools.base.inputbase.BlockBASE.update_block"]], "band_parser() (bandsbase class method)": [[6, "CRYSTALpytools.base.propout.BandsBASE.BAND_parser"]], "bandsbase (class in crystalpytools.base.propout)": [[6, "CRYSTALpytools.base.propout.BandsBASE"]], "crystalpytools.base.propout": [[6, "module-CRYSTALpytools.base.propout"]], "dosbase (class in crystalpytools.base.propout)": [[6, "CRYSTALpytools.base.propout.DOSBASE"]], "doss_parser() (dosbase class method)": [[6, "CRYSTALpytools.base.propout.DOSBASE.DOSS_parser"]], "f25_parser() (bandsbase class method)": [[6, "CRYSTALpytools.base.propout.BandsBASE.f25_parser"]], "f25_parser() (dosbase class method)": [[6, "CRYSTALpytools.base.propout.DOSBASE.f25_parser"]], "crystalpytools.calculate": [[7, "module-CRYSTALpytools.calculate"]], "cry_ads_energy() (in module crystalpytools.calculate)": [[7, "CRYSTALpytools.calculate.cry_ads_energy"]], "cry_shrink() (in module crystalpytools.calculate)": [[7, "CRYSTALpytools.calculate.cry_shrink"]], "crystalpytools.convert": [[8, "module-CRYSTALpytools.convert"]], "cry_ase2gui() (in module crystalpytools.convert)": [[8, "CRYSTALpytools.convert.cry_ase2gui"]], "cry_bands2pmg() (in module crystalpytools.convert)": [[8, "CRYSTALpytools.convert.cry_bands2pmg"]], "cry_gui2ase() (in module crystalpytools.convert)": [[8, "CRYSTALpytools.convert.cry_gui2ase"]], "cry_gui2cif() (in module crystalpytools.convert)": [[8, "CRYSTALpytools.convert.cry_gui2cif"]], "cry_gui2pmg() (in module crystalpytools.convert)": [[8, "CRYSTALpytools.convert.cry_gui2pmg"]], "cry_gui2xyz() (in module crystalpytools.convert)": [[8, "CRYSTALpytools.convert.cry_gui2xyz"]], "cry_out2ase() (in module crystalpytools.convert)": [[8, "CRYSTALpytools.convert.cry_out2ase"]], "cry_out2cif() (in module crystalpytools.convert)": [[8, "CRYSTALpytools.convert.cry_out2cif"]], "cry_out2pmg() (in module crystalpytools.convert)": [[8, "CRYSTALpytools.convert.cry_out2pmg"]], "cry_out2xyz() (in module crystalpytools.convert)": [[8, "CRYSTALpytools.convert.cry_out2xyz"]], "cry_pmg2gui() (in module crystalpytools.convert)": [[8, "CRYSTALpytools.convert.cry_pmg2gui"]], "crystalpytools.crystal_io": [[9, "module-CRYSTALpytools.crystal_io"]], "crystal_density (class in crystalpytools.crystal_io)": [[9, "CRYSTALpytools.crystal_io.Crystal_density"]], "crystal_gui (class in crystalpytools.crystal_io)": [[9, "CRYSTALpytools.crystal_io.Crystal_gui"]], "crystal_input (class in crystalpytools.crystal_io)": [[9, "CRYSTALpytools.crystal_io.Crystal_input"]], "crystal_output (class in crystalpytools.crystal_io)": [[9, "CRYSTALpytools.crystal_io.Crystal_output"]], "properties_input (class in crystalpytools.crystal_io)": [[9, "CRYSTALpytools.crystal_io.Properties_input"]], "properties_output (class in crystalpytools.crystal_io)": [[9, "CRYSTALpytools.crystal_io.Properties_output"]], "_pmg2input() (crystal_input method)": [[9, "CRYSTALpytools.crystal_io.Crystal_input._pmg2input"]], "cry_combine_density() (in module crystalpytools.crystal_io)": [[9, "CRYSTALpytools.crystal_io.cry_combine_density"]], "from_file() (properties_input method)": [[9, "CRYSTALpytools.crystal_io.Properties_input.from_file"]], "geom_from_cif() (crystal_input method)": [[9, "CRYSTALpytools.crystal_io.Crystal_input.geom_from_cif"]], "geom_from_pmg() (crystal_input method)": [[9, "CRYSTALpytools.crystal_io.Crystal_input.geom_from_pmg"]], "get_band_gap() (crystal_output method)": [[9, "CRYSTALpytools.crystal_io.Crystal_output.get_band_gap"]], "get_config_analysis() (crystal_output method)": [[9, "CRYSTALpytools.crystal_io.Crystal_output.get_config_analysis"]], "get_dielectric_tensor() (crystal_output method)": [[9, "CRYSTALpytools.crystal_io.Crystal_output.get_dielectric_tensor"]], "get_dimensionality() (crystal_output method)": [[9, "CRYSTALpytools.crystal_io.Crystal_output.get_dimensionality"]], "get_eigenvectors() (crystal_output method)": [[9, "CRYSTALpytools.crystal_io.Crystal_output.get_eigenvectors"]], "get_elatensor() (crystal_output method)": [[9, "CRYSTALpytools.crystal_io.Crystal_output.get_elatensor"]], "get_fermi_energy() (crystal_output method)": [[9, "CRYSTALpytools.crystal_io.Crystal_output.get_fermi_energy"]], "get_final_energy() (crystal_output method)": [[9, "CRYSTALpytools.crystal_io.Crystal_output.get_final_energy"]], "get_forces() (crystal_output method)": [[9, "CRYSTALpytools.crystal_io.Crystal_output.get_forces"]], "get_last_geom() (crystal_output method)": [[9, "CRYSTALpytools.crystal_io.Crystal_output.get_last_geom"]], "get_mode() (crystal_output method)": [[9, "CRYSTALpytools.crystal_io.Crystal_output.get_mode"]], "get_mulliken_charges() (crystal_output method)": [[9, "CRYSTALpytools.crystal_io.Crystal_output.get_mulliken_charges"]], "get_num_cycles() (crystal_output method)": [[9, "CRYSTALpytools.crystal_io.Crystal_output.get_num_cycles"]], "get_opt_convergence_energy() (crystal_output method)": [[9, "CRYSTALpytools.crystal_io.Crystal_output.get_opt_convergence_energy"]], "get_phonon() (crystal_output method)": [[9, "CRYSTALpytools.crystal_io.Crystal_output.get_phonon"]], "get_phonon_eigenvector() (crystal_output method)": [[9, "CRYSTALpytools.crystal_io.Crystal_output.get_phonon_eigenvector"]], "get_primitive_lattice() (crystal_output method)": [[9, "CRYSTALpytools.crystal_io.Crystal_output.get_primitive_lattice"]], "get_q_info() (crystal_output method)": [[9, "CRYSTALpytools.crystal_io.Crystal_output.get_q_info"]], "get_reciprocal_lattice() (crystal_output method)": [[9, "CRYSTALpytools.crystal_io.Crystal_output.get_reciprocal_lattice"]], "get_scf_convergence() (crystal_output method)": [[9, "CRYSTALpytools.crystal_io.Crystal_output.get_scf_convergence"]], "get_symm_ops() (crystal_output method)": [[9, "CRYSTALpytools.crystal_io.Crystal_output.get_symm_ops"]], "make_bands_block() (properties_input method)": [[9, "CRYSTALpytools.crystal_io.Properties_input.make_bands_block"]], "make_doss_block() (properties_input method)": [[9, "CRYSTALpytools.crystal_io.Properties_input.make_doss_block"]], "make_newk_block() (properties_input method)": [[9, "CRYSTALpytools.crystal_io.Properties_input.make_newk_block"]], "make_pdoss_block() (properties_input method)": [[9, "CRYSTALpytools.crystal_io.Properties_input.make_pdoss_block"]], "read_cry_bands() (properties_output method)": [[9, "CRYSTALpytools.crystal_io.Properties_output.read_cry_bands"]], "read_cry_contour() (properties_output method)": [[9, "CRYSTALpytools.crystal_io.Properties_output.read_cry_contour"]], "read_cry_density_profile() (properties_output method)": [[9, "CRYSTALpytools.crystal_io.Properties_output.read_cry_density_profile"]], "read_cry_doss() (properties_output method)": [[9, "CRYSTALpytools.crystal_io.Properties_output.read_cry_doss"]], "read_cry_irr_density() (crystal_density method)": [[9, "CRYSTALpytools.crystal_io.Crystal_density.read_cry_irr_density"]], "read_cry_lapl_profile() (properties_output method)": [[9, "CRYSTALpytools.crystal_io.Properties_output.read_cry_lapl_profile"]], "read_cry_output() (crystal_output method)": [[9, "CRYSTALpytools.crystal_io.Crystal_output.read_cry_output"]], "read_cry_rholine() (properties_output method)": [[9, "CRYSTALpytools.crystal_io.Properties_output.read_cry_rholine"]], "read_cry_seebeck() (properties_output method)": [[9, "CRYSTALpytools.crystal_io.Properties_output.read_cry_seebeck"]], "read_cry_sigma() (properties_output method)": [[9, "CRYSTALpytools.crystal_io.Properties_output.read_cry_sigma"]], "read_cry_xrd_spec() (properties_output method)": [[9, "CRYSTALpytools.crystal_io.Properties_output.read_cry_xrd_spec"]], "read_electron_band() (properties_output method)": [[9, "CRYSTALpytools.crystal_io.Properties_output.read_electron_band"]], "read_electron_dos() (properties_output method)": [[9, "CRYSTALpytools.crystal_io.Properties_output.read_electron_dos"]], "read_file() (properties_output method)": [[9, "CRYSTALpytools.crystal_io.Properties_output.read_file"]], "read_gui() (crystal_gui method)": [[9, "CRYSTALpytools.crystal_io.Crystal_gui.read_gui"]], "read_vecfield() (properties_output method)": [[9, "CRYSTALpytools.crystal_io.Properties_output.read_vecfield"]], "write_cry_density() (in module crystalpytools.crystal_io)": [[9, "CRYSTALpytools.crystal_io.write_cry_density"]], "write_gui() (crystal_gui method)": [[9, "CRYSTALpytools.crystal_io.Crystal_gui.write_gui"]], "write_properties_input() (properties_input method)": [[9, "CRYSTALpytools.crystal_io.Properties_input.write_properties_input"]], "crystalpytools.execute": [[10, "module-CRYSTALpytools.execute"]], "runcry() (in module crystalpytools.execute)": [[10, "CRYSTALpytools.execute.runcry"]], "runprop() (in module crystalpytools.execute)": [[10, "CRYSTALpytools.execute.runprop"]], "set_runcry_path() (in module crystalpytools.execute)": [[10, "CRYSTALpytools.execute.set_runcry_path"]], "set_runprop_path() (in module crystalpytools.execute)": [[10, "CRYSTALpytools.execute.set_runprop_path"]], "crystalpytools.plot": [[11, "module-CRYSTALpytools.plot"]], "plot_cry_bands() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_cry_bands"]], "plot_cry_comp() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_cry_comp"]], "plot_cry_contour() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_cry_contour"]], "plot_cry_contour_differences() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_cry_contour_differences"]], "plot_cry_density_profile() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_cry_density_profile"]], "plot_cry_doss() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_cry_doss"]], "plot_cry_ela() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_cry_ela"]], "plot_cry_es() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_cry_es"]], "plot_cry_lapl_profile() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_cry_lapl_profile"]], "plot_cry_multiseebeck() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_cry_multiseebeck"]], "plot_cry_multisigma() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_cry_multisigma"]], "plot_cry_poisson() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_cry_poisson"]], "plot_cry_powerfactor_carrier() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_cry_powerfactor_carrier"]], "plot_cry_powerfactor_potential() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_cry_powerfactor_potential"]], "plot_cry_rholine() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_cry_rholine"]], "plot_cry_seebeck_carrier() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_cry_seebeck_carrier"]], "plot_cry_seebeck_potential() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_cry_seebeck_potential"]], "plot_cry_shear() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_cry_shear"]], "plot_cry_sigma_carrier() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_cry_sigma_carrier"]], "plot_cry_sigma_potential() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_cry_sigma_potential"]], "plot_cry_xrd() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_cry_xrd"]], "plot_cry_young() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_cry_young"]], "plot_cry_zt() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_cry_zt"]], "plot_electron_band() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_electron_band"]], "plot_electron_banddos() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_electron_banddos"]], "plot_electron_dos() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_electron_dos"]], "plot_phonon_band() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_phonon_band"]], "plot_phonon_banddos() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_phonon_banddos"]], "plot_phonon_dos() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_phonon_dos"]], "plot_vecfield2d_j() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_vecfield2D_J"], [11, "CRYSTALpytools.plot.plot_vecfield2D_j"]], "plot_vecfield2d_m() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.plot_vecfield2D_m"]], "save_plot() (in module crystalpytools.plot)": [[11, "CRYSTALpytools.plot.save_plot"]], "crystalpytools.thermodynamics": [[12, "module-CRYSTALpytools.thermodynamics"]], "harmonic (class in crystalpytools.thermodynamics)": [[12, "CRYSTALpytools.thermodynamics.Harmonic"]], "mode (class in crystalpytools.thermodynamics)": [[12, "CRYSTALpytools.thermodynamics.Mode"]], "output (class in crystalpytools.thermodynamics)": [[12, "CRYSTALpytools.thermodynamics.Output"]], "quasi_harmonic (class in crystalpytools.thermodynamics)": [[12, "CRYSTALpytools.thermodynamics.Quasi_harmonic"]], "_clean_attr() (quasi_harmonic method)": [[12, "CRYSTALpytools.thermodynamics.Quasi_harmonic._clean_attr"]], "_combine_data() (quasi_harmonic method)": [[12, "CRYSTALpytools.thermodynamics.Quasi_harmonic._combine_data"]], "_get_harmonic_phonon() (quasi_harmonic method)": [[12, "CRYSTALpytools.thermodynamics.Quasi_harmonic._get_harmonic_phonon"]], "_minimize_gibbs() (quasi_harmonic method)": [[12, "CRYSTALpytools.thermodynamics.Quasi_harmonic._minimize_gibbs"]], "_minimize_latt() (quasi_harmonic static method)": [[12, "CRYSTALpytools.thermodynamics.Quasi_harmonic._minimize_latt"]], "_phonon_continuity() (quasi_harmonic static method)": [[12, "CRYSTALpytools.thermodynamics.Quasi_harmonic._phonon_continuity"]], "_phonon_sumup() (harmonic method)": [[12, "CRYSTALpytools.thermodynamics.Harmonic._phonon_sumup"]], "_poly_no_cst() (quasi_harmonic static method)": [[12, "CRYSTALpytools.thermodynamics.Quasi_harmonic._poly_no_cst"]], "_restore_pcel() (in module crystalpytools.thermodynamics)": [[12, "CRYSTALpytools.thermodynamics._restore_pcel"]], "bulk_modulus() (quasi_harmonic method)": [[12, "CRYSTALpytools.thermodynamics.Quasi_harmonic.bulk_modulus"]], "eos_fit() (quasi_harmonic method)": [[12, "CRYSTALpytools.thermodynamics.Quasi_harmonic.eos_fit"]], "expansion_lin() (quasi_harmonic method)": [[12, "CRYSTALpytools.thermodynamics.Quasi_harmonic.expansion_lin"]], "expansion_vol() (quasi_harmonic method)": [[12, "CRYSTALpytools.thermodynamics.Quasi_harmonic.expansion_vol"]], "freq_polynomial_fit() (quasi_harmonic method)": [[12, "CRYSTALpytools.thermodynamics.Quasi_harmonic.freq_polynomial_fit"]], "from_ha_files() (quasi_harmonic method)": [[12, "CRYSTALpytools.thermodynamics.Quasi_harmonic.from_HA_files"]], "from_qha_file() (quasi_harmonic method)": [[12, "CRYSTALpytools.thermodynamics.Quasi_harmonic.from_QHA_file"]], "from_file() (harmonic method)": [[12, "CRYSTALpytools.thermodynamics.Harmonic.from_file"]], "from_frequency() (harmonic method)": [[12, "CRYSTALpytools.thermodynamics.Harmonic.from_frequency"]], "from_phonopy() (harmonic method)": [[12, "CRYSTALpytools.thermodynamics.Harmonic.from_phonopy"]], "from_phonopy_files() (quasi_harmonic method)": [[12, "CRYSTALpytools.thermodynamics.Quasi_harmonic.from_phonopy_files"]], "get_c_v() (mode method)": [[12, "CRYSTALpytools.thermodynamics.Mode.get_c_v"]], "get_entropy() (mode method)": [[12, "CRYSTALpytools.thermodynamics.Mode.get_entropy"]], "get_gruneisen() (mode method)": [[12, "CRYSTALpytools.thermodynamics.Mode.get_gruneisen"]], "get_u_vib() (mode method)": [[12, "CRYSTALpytools.thermodynamics.Mode.get_u_vib"]], "get_zp_energy() (mode method)": [[12, "CRYSTALpytools.thermodynamics.Mode.get_zp_energy"]], "polynomial_fit() (mode method)": [[12, "CRYSTALpytools.thermodynamics.Mode.polynomial_fit"]], "specific_heat() (quasi_harmonic method)": [[12, "CRYSTALpytools.thermodynamics.Quasi_harmonic.specific_heat"]], "thermo_eos() (quasi_harmonic method)": [[12, "CRYSTALpytools.thermodynamics.Quasi_harmonic.thermo_eos"]], "thermo_freq() (quasi_harmonic method)": [[12, "CRYSTALpytools.thermodynamics.Quasi_harmonic.thermo_freq"]], "thermo_gruneisen() (quasi_harmonic method)": [[12, "CRYSTALpytools.thermodynamics.Quasi_harmonic.thermo_gruneisen"]], "thermodynamics() (harmonic method)": [[12, "CRYSTALpytools.thermodynamics.Harmonic.thermodynamics"]], "write_ha_result() (harmonic method)": [[12, "CRYSTALpytools.thermodynamics.Harmonic.write_HA_result"]], "write_ha_result() (output class method)": [[12, "CRYSTALpytools.thermodynamics.Output.write_HA_result"]], "write_qha_combinedata() (output class method)": [[12, "CRYSTALpytools.thermodynamics.Output.write_QHA_combinedata"]], "write_qha_eosfit() (output class method)": [[12, "CRYSTALpytools.thermodynamics.Output.write_QHA_eosfit"]], "write_qha_polyfit() (output class method)": [[12, "CRYSTALpytools.thermodynamics.Output.write_QHA_polyfit"]], "write_qha_sortphonon() (output class method)": [[12, "CRYSTALpytools.thermodynamics.Output.write_QHA_sortphonon"]], "write_qha_thermoeos() (output class method)": [[12, "CRYSTALpytools.thermodynamics.Output.write_QHA_thermoeos"]], "write_qha_thermofreq() (output class method)": [[12, "CRYSTALpytools.thermodynamics.Output.write_QHA_thermofreq"]], "write_qha_thermogru() (output class method)": [[12, "CRYSTALpytools.thermodynamics.Output.write_QHA_thermogru"]], "write_bulk_modulus() (output class method)": [[12, "CRYSTALpytools.thermodynamics.Output.write_bulk_modulus"]], "write_expansion_latt() (output class method)": [[12, "CRYSTALpytools.thermodynamics.Output.write_expansion_latt"]], "write_expansion_vol() (output class method)": [[12, "CRYSTALpytools.thermodynamics.Output.write_expansion_vol"]], "write_specific_heat() (output class method)": [[12, "CRYSTALpytools.thermodynamics.Output.write_specific_heat"]]}})